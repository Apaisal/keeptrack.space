---
name: Build Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint-yml:
    name: Yaml Lint
    runs-on: ubuntu-latest
    steps:
      # Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v2
      # Lint Yaml Code
      - name: YAML Lint
        uses: ibiqlik/action-yamllint@v3.1.0
        with:
          file_or_dir: ${{ github.workspace }}/
            .github/workflows/build-pipeline.yml
  compliance:
    needs: lint-yml
    name: NPM Audit Report
    runs-on: ubuntu-latest
    steps:
      # Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v2
      # Audit Package.json
      - name: NPM Audit Action
        uses: oke-py/npm-audit-action@v1.8.2
  build:
    needs: compliance
    name: Build
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v2
      # Setup Node
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "17"
      # Get Node Modules from Cache
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-
            ${{ env.cache-name }}-
            ${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Ensure Node Modules Setup
      - name: Install Dependencies
        run: npm ci --ignore-scripts
      # Build
      - name: Build
        run: npm build
  unit-tests:
    needs: build
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v2
      # Setup Node
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "17"
      # Get Node Modules from Cache
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-
            ${{ env.cache-name }}-
            ${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Ensure Node Modules Setup
      - name: Install Dependencies
        run: npm ci --ignore-scripts
      # Build
      - name: Build
        run: npm build
      # Unit Tests
      - name: Test
        run: npm test
  analyze:
    needs: unit-tests
    name: Analyze
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v2
      # Setup Node
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "17"
      # Get Node Modules from Cache
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-
            ${{ env.cache-name }}-
            ${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Ensure Node Modules Setup
      - name: Install Dependencies
        run: npm ci --ignore-scripts
      # Build
      - name: Build
        run: npm build
      # SonarQube
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.6
      # CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
      - name: Code Coverage
        run: node ./node_modules/.bin/codecov

// Generated by CodiumAI

import { UiValidation } from '@app/static/ui-validation';

describe('UiValidation_class', () => {
  // Tests that all event listeners are added successfully
  it('test_init_ui_validation', () => {
    // the following event listeners may be added.
    document.body.innerHTML = `<div id="editSat">
            <input id="es-ecen" />
            <input id="es-day" />
            <input id="es-inc" />
            <input id="es-rasc" />
            <input id="es-meanmo" />
            <input id="es-argPe" />
            <input id="es-meana" />
            <input id="ms-lat" />
            <input id="ms-lon" />
        </div>`;
    UiValidation.initUiValidation();
    expect(document.getElementById('editSat')?.querySelectorAll('input')).toBeTruthy();
    expect(document.getElementById('es-ecen')).toBeTruthy();
    expect(document.getElementById('es-day')).toBeTruthy();
    expect(document.getElementById('es-inc')).toBeTruthy();
    expect(document.getElementById('es-rasc')).toBeTruthy();
    expect(document.getElementById('es-meanmo')).toBeTruthy();
    expect(document.getElementById('es-argPe')).toBeTruthy();
    expect(document.getElementById('es-meana')).toBeTruthy();
    expect(document.getElementById('ms-lat')).toBeTruthy();
    expect(document.getElementById('ms-lon')).toBeTruthy();

    UiValidation['allowPeriod_']({ code: 'Period', preventDefault: jest.fn } as unknown as KeyboardEvent);
    UiValidation['esArgPe360_']();
    (<HTMLInputElement>document.getElementById('es-argPe')).value = '-10';
    UiValidation['esArgPe360_']();
    (<HTMLInputElement>document.getElementById('es-argPe')).value = '500';
    UiValidation['esArgPe360_']();
    UiValidation['esDay366_']();
    (<HTMLInputElement>document.getElementById('es-day')).value = '-10';
    UiValidation['esDay366_']();
    (<HTMLInputElement>document.getElementById('es-day')).value = '500';
    UiValidation['esDay366_']();
    UiValidation['esInc180_']();
    (<HTMLInputElement>document.getElementById('es-inc')).value = '-10';
    UiValidation['esInc180_']();
    (<HTMLInputElement>document.getElementById('es-inc')).value = '500';
    UiValidation['esInc180_']();
    UiValidation['esMeana360_']();
    (<HTMLInputElement>document.getElementById('es-meana')).value = '-10';
    UiValidation['esMeana360_']();
    (<HTMLInputElement>document.getElementById('es-meana')).value = '500';
    UiValidation['esMeana360_']();
    UiValidation['esMeanmo18_']();
    (<HTMLInputElement>document.getElementById('es-meanmo')).value = '-10';
    UiValidation['esMeanmo18_']();
    (<HTMLInputElement>document.getElementById('es-meanmo')).value = '500';
    UiValidation['esMeanmo18_']();
    UiValidation['esRasc360_']();
    (<HTMLInputElement>document.getElementById('es-rasc')).value = '-10';
    UiValidation['esRasc360_']();
    (<HTMLInputElement>document.getElementById('es-rasc')).value = '500';
    UiValidation['esRasc360_']();
    UiValidation['msLat90_']();
    (<HTMLInputElement>document.getElementById('ms-lat')).value = '-100';
    UiValidation['msLat90_']();
    (<HTMLInputElement>document.getElementById('ms-lat')).value = '500';
    UiValidation['msLat90_']();
    UiValidation['msLon180_']();
    (<HTMLInputElement>document.getElementById('ms-lon')).value = '-100';
    UiValidation['msLon180_']();
    (<HTMLInputElement>document.getElementById('ms-lon')).value = '500';
    UiValidation['msLon180_']();

    UiValidation['validateNumOnly_']({ code: 'KeyA', ctrlKey: true, preventDefault: jest.fn } as unknown as KeyboardEvent);
    UiValidation['validateNumOnly_']({ code: 'KeyA', ctrlKey: false, preventDefault: jest.fn } as unknown as KeyboardEvent);
  });
});

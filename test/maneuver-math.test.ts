// Generated by CodiumAI

/**
Main functionalities:
The ManueverMath class provides methods for creating maneuver analysts and finding change of orbit to dock. It uses various fields and methods from other classes such as CatalogManager, TimeManager, SensorManager, and SatMath to perform its functionalities.

Methods:
- createManeuverAnalyst: creates a maneuver analyst for a given satellite by calculating its launch points, getting its orbit by latitude and longitude, and modifying its TLE1 and TLE2 parameters.
- findChangeOrbitToDock: finds the closest approach time between two satellites and creates a maneuver analyst for the first satellite with modified inclination, mean motion, and right ascension of the ascending node.

Fields:
- None of the fields are directly used in the methods of this class, but it uses fields from other classes such as CatalogManager, TimeManager, SensorManager, and SatMath.
 */

import { keepTrackApi } from '@app/js/keepTrackApi';
import { ManueverMath } from '@app/js/static/maneuver-math';
import { Degrees, Kilometers, Milliseconds, SpaceObjectType } from 'ootk';
import { defaultSat } from './environment/apiMocks';
import { setupStandardEnvironment } from './environment/standard-env';

describe('ManueverMath_class', () => {
  beforeEach(() => {
    setupStandardEnvironment();
    const sensorManagerInstance = keepTrackApi.getSensorManager();
    sensorManagerInstance.currentSensors = [
      {
        id: 0,
        name: 'Cape Cod SFS, Massachusetts',
        objName: 'COD',
        type: SpaceObjectType.PHASED_ARRAY_RADAR,
        lat: <Degrees>41.754785,
        lon: <Degrees>-70.539151,
        alt: <Kilometers>0.060966,
        obsminaz: <Degrees>347,
        obsmaxaz: <Degrees>227,
        obsminel: <Degrees>3,
        obsmaxel: <Degrees>85,
        obsminrange: <Kilometers>200,
        obsmaxrange: <Kilometers>5556,
        changeObjectInterval: <Milliseconds>1000,
        beamwidth: <Degrees>2.0, // National Research Council 1979. Radiation Intensity of the PAVE PAWS Radar System. Washington, DC: The National Academies Press.
        linkAehf: true,
        linkWgs: true,
        zoom: 'leo',
        url: 'https://www.radartutorial.eu/19.kartei/01.oth/karte004.en.html',
        country: 'United States',
        sun: 'No Impact',
        volume: false,
      },
    ];
    const catalogManagerInstance = keepTrackApi.getCatalogManager();
    catalogManagerInstance.satData[80000] = { ...defaultSat, ...{ sccNum: '80000' } };
  });

  // Tests that a maneuver analyst can be created with valid input parameters
  it('test_create_maneuver_analyst_valid_input', () => {
    const satId = 1;
    const incVariation = 0.1;
    const meanmoVariation = 0.1;
    const rascVariation = 0.1;
    expect(() => ManueverMath.createManeuverAnalyst(satId, incVariation, meanmoVariation, rascVariation)).not.toThrow();
  });

  // Tests that an error is thrown when creating a maneuver analyst with no sensors selected
  it('test_create_maneuver_analyst_no_sensors_selected', () => {
    const satId = 1;
    const incVariation = 0.1;
    const meanmoVariation = 0.1;
    const rascVariation = 0.1;
    const sensorManagerInstance = keepTrackApi.getSensorManager();
    sensorManagerInstance.currentSensors = [];
    expect(() => {
      ManueverMath.createManeuverAnalyst(satId, incVariation, meanmoVariation, rascVariation);
    }).toThrow('No sensors selected');
  });

  // Tests that a maneuver analyst cannot be created when the breakup generator fails
  it('test_create_maneuver_analyst_breakup_generator_failed', () => {
    const satId = 1;
    const incVariation = 0.1;
    const meanmoVariation = 0.1;
    const rascVariation = 0.1;
    const catalogManagerInstance = keepTrackApi.getCatalogManager();
    catalogManagerInstance.satCruncher.postMessage = jest.fn();
    expect(ManueverMath.createManeuverAnalyst(satId, incVariation, meanmoVariation, rascVariation)).toBeFalsy();
    expect(catalogManagerInstance.satCruncher.postMessage).not.toHaveBeenCalled();
  });
});

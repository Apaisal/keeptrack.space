/* eslint-disable no-unused-vars */
export interface CatalogManager {
  queryStr: any;
  resetSatInView: () => void;
  resetSatInSun: () => void;
  convertSatnumArrayToIdArray: (satnumArray: any) => any[];
  initGsData: () => void;
  gsInfo: any;
  cosparIndex: any;
  insertNewAnalystSatellite: (TLE1: any, TLE2: any, analsat: any) => void;
  setSat: (i: any, sat: any) => any;
  mergeSat: (sat: any) => any;
  vmagUpdate: (vmagObject: any) => any;
  sunECI: any;
  getSatInViewOnly: (i: any) => any;
  getSatPosOnly: (i: any) => any;
  getSatExtraOnly: (i: any) => any;
  sccIndex: any;
  getIdFromEci: (eci: any) => number;
  orbitalSats: number;
  getIdFromStarName: (starName: any) => number;
  getSensorFromSensorName: (sensorName: any) => {};
  getScreenCoords: (i: any, pMatrix: any, camMatrix: any, pos: any) => void;
  searchYear: (satData: any, year: any) => any[];
  searchYearOrLess: (satData: any, year: any) => any[];
  searchNameRegex: (satData: any, regex: any) => any[];
  searchCountryRegex: (satData: any, regex: any) => any[];
  exportTle2Csv: (satCat: any) => void;
  exportTle2Txt: (satCat: any) => void;
  setHover: (i: any) => void;
  selectSat: (i: any) => void;
  missileSats: any;
  getSatFromObjNum(arg0: any);
  convertIdArrayToSatnumArray: (satIdArray: any) => any[];
  getSat(arg0: number);
  init: (satCruncherOveride?: any) => Promise<void>;
  satCruncher: Worker;
  gotExtraData: boolean;
  numSats: number;
  satData: any;
  satExtraData: any;
  satSensorMarkerArray: any;
  setColorScheme: any;
  onCruncherReady: () => void;
  getIdFromIntlDes: (arg0: string) => number;
  getIdFromObjNum: (objNum: number) => number;
  getSatInSun: () => any;
  getSatInView: () => any;
  getSatVel: () => any;
}

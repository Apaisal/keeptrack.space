{"version":3,"sources":["webpack://keeptrack.space/./src/js/checker-script.js"],"names":[],"mappings":";;;;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iCAAiC;;AAErE;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"checker-script.js","sourcesContent":["/* /////////////////////////////////////////////////////////////////////////////\n\nThis script is intended to check that the application is ready for interaction.\n\n///////////////////////////////////////////////////////////////////////////// */\n\ndetectIe();\n\n// Looking for an essential file such as shaders.js ensures that the install\n// directory is currectly set. If we look for the index.htm file then it will\n// always be found (otherwise how did we load this script). If we look for\n// optional modules like sensorManager.js then it could fail to load unnecessarily\n(function checkReadyState () {\n  if (settingsManager.offline) return;\n  let checkRequest = new Request(`${settingsManager.installDirectory}js/objectManager.js`);\n\n  fetch(checkRequest).then(function (response) {\n    // console.log(response.status + \"OK\");\n\n    if (response.status === 404) {\n      // This same file can be used by .htaccess to redirect bad links\n      // across the whole server (ex. keeptrack.space/fakepage.html)\n      window.location.assign('/res/404.html');\n    } else {\n      readyForInteraction();\n    }\n  });\n})();\n\nfunction detectIe() {\n    let BrowserA = navigator.userAgent;\n    let browsers = (/Chrome|Safari|Firefox|Edg/ui).test(BrowserA);\n\n    if (browsers === false) {\n        window.location.assign = '/res/IE.html';\n    } else {\n        return true;\n    }\n}\nfunction readyForInteraction() {\n  // This looks to see if the main page is loaded.\n  // It does NOT know if all of the async loading is complete. The satellite\n  // database (.json file) is the largest async file and it has to  be processed\n  // by the sat-cruncher web worker before webgl can draw the satellites\n  if (document.readyState !== 'complete') {\n    document.addEventListener('readystatechange', function () {\n      let intervalID = window.setInterval(isReady, 1000);\n\n      function isReady() {\n        if (document.readyState === 'interactive') {\n          displayElement('main-container', false);\n        } else if (document.readyState === 'complete') {\n          window.clearInterval(intervalID);\n          displayElement('main-container', true);\n        }\n      }\n    });\n  } else {\n    // Sometimes it loads really fast\n    displayElement('main-container', true);\n  }\n}\nfunction displayElement(id, value) {\n  document.getElementById(id).style.display = value\n  ? 'block'\n  : 'none';\n}\n"],"sourceRoot":""}
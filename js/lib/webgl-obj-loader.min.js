!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var s=t();for(var r in s)("object"==typeof exports?exports:e)[r]=s[r]}}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function s(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,s),a.l=!0,a.exports}return s.m=e,s.c=t,s.d=function(e,t,r){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)s.d(r,a,function(t){return e[t]}.bind(null,a));return r},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="/",s(s.s=0)}({"./src/index.ts":function(e,t,s){"use strict";s.r(t),s.d(t,"OBJ",function(){return l}),s.d(t,"version",function(){return o});var r=s("./src/mesh.ts");s.d(t,"Mesh",function(){return r.default});var a=s("./src/material.ts");s.d(t,"Material",function(){return a.Material}),s.d(t,"MaterialLibrary",function(){return a.MaterialLibrary});var i=s("./src/layout.ts");s.d(t,"Attribute",function(){return i.Attribute}),s.d(t,"DuplicateAttributeException",function(){return i.DuplicateAttributeException}),s.d(t,"Layout",function(){return i.Layout}),s.d(t,"TYPES",function(){return i.TYPES});var n=s("./src/utils.ts");s.d(t,"downloadModels",function(){return n.downloadModels}),s.d(t,"downloadMeshes",function(){return n.downloadMeshes}),s.d(t,"initMeshBuffers",function(){return n.initMeshBuffers}),s.d(t,"deleteMeshBuffers",function(){return n.deleteMeshBuffers});const o="2.0.3",l={Attribute:i.Attribute,DuplicateAttributeException:i.DuplicateAttributeException,Layout:i.Layout,Material:a.Material,MaterialLibrary:a.MaterialLibrary,Mesh:r.default,TYPES:i.TYPES,downloadModels:n.downloadModels,downloadMeshes:n.downloadMeshes,initMeshBuffers:n.initMeshBuffers,deleteMeshBuffers:n.deleteMeshBuffers,version:o}},"./src/layout.ts":function(e,t,s){"use strict";var r;s.r(t),s.d(t,"TYPES",function(){return r}),s.d(t,"DuplicateAttributeException",function(){return a}),s.d(t,"Attribute",function(){return i}),s.d(t,"Layout",function(){return n}),function(e){e.BYTE="BYTE",e.UNSIGNED_BYTE="UNSIGNED_BYTE",e.SHORT="SHORT",e.UNSIGNED_SHORT="UNSIGNED_SHORT",e.FLOAT="FLOAT"}(r||(r={}));class a extends Error{constructor(e){super(`found duplicate attribute: ${e.key}`)}}class i{constructor(e,t,s,r=!1){switch(this.key=e,this.size=t,this.type=s,this.normalized=r,s){case"BYTE":case"UNSIGNED_BYTE":this.sizeOfType=1;break;case"SHORT":case"UNSIGNED_SHORT":this.sizeOfType=2;break;case"FLOAT":this.sizeOfType=4;break;default:throw new Error(`Unknown gl type: ${s}`)}this.sizeInBytes=this.sizeOfType*t}}class n{constructor(...e){this.attributes=e,this.attributeMap={};let t=0,s=0;for(const r of e){if(this.attributeMap[r.key])throw new a(r);t%r.sizeOfType!=0&&(t+=r.sizeOfType-t%r.sizeOfType,console.warn("Layout requires padding before "+r.key+" attribute")),this.attributeMap[r.key]={attribute:r,size:r.size,type:r.type,normalized:r.normalized,offset:t},t+=r.sizeInBytes,s=Math.max(s,r.sizeOfType)}t%s!=0&&(t+=s-t%s,console.warn("Layout requires padding at the back")),this.stride=t;for(const t of e)this.attributeMap[t.key].stride=this.stride}}n.POSITION=new i("position",3,r.FLOAT),n.NORMAL=new i("normal",3,r.FLOAT),n.TANGENT=new i("tangent",3,r.FLOAT),n.BITANGENT=new i("bitangent",3,r.FLOAT),n.UV=new i("uv",2,r.FLOAT),n.MATERIAL_INDEX=new i("materialIndex",1,r.SHORT),n.MATERIAL_ENABLED=new i("materialEnabled",1,r.UNSIGNED_SHORT),n.AMBIENT=new i("ambient",3,r.FLOAT),n.DIFFUSE=new i("diffuse",3,r.FLOAT),n.SPECULAR=new i("specular",3,r.FLOAT),n.SPECULAR_EXPONENT=new i("specularExponent",3,r.FLOAT),n.EMISSIVE=new i("emissive",3,r.FLOAT),n.TRANSMISSION_FILTER=new i("transmissionFilter",3,r.FLOAT),n.DISSOLVE=new i("dissolve",1,r.FLOAT),n.ILLUMINATION=new i("illumination",1,r.UNSIGNED_SHORT),n.REFRACTION_INDEX=new i("refractionIndex",1,r.FLOAT),n.SHARPNESS=new i("sharpness",1,r.FLOAT),n.MAP_DIFFUSE=new i("mapDiffuse",1,r.SHORT),n.MAP_AMBIENT=new i("mapAmbient",1,r.SHORT),n.MAP_SPECULAR=new i("mapSpecular",1,r.SHORT),n.MAP_SPECULAR_EXPONENT=new i("mapSpecularExponent",1,r.SHORT),n.MAP_DISSOLVE=new i("mapDissolve",1,r.SHORT),n.ANTI_ALIASING=new i("antiAliasing",1,r.UNSIGNED_SHORT),n.MAP_BUMP=new i("mapBump",1,r.SHORT),n.MAP_DISPLACEMENT=new i("mapDisplacement",1,r.SHORT),n.MAP_DECAL=new i("mapDecal",1,r.SHORT),n.MAP_EMISSIVE=new i("mapEmissive",1,r.SHORT)},"./src/material.ts":function(e,t,s){"use strict";s.r(t),s.d(t,"Material",function(){return r}),s.d(t,"MaterialLibrary",function(){return i});class r{constructor(e){this.name=e,this.ambient=[0,0,0],this.diffuse=[0,0,0],this.specular=[0,0,0],this.emissive=[0,0,0],this.transmissionFilter=[0,0,0],this.dissolve=0,this.specularExponent=0,this.transparency=0,this.illumination=0,this.refractionIndex=1,this.sharpness=0,this.mapDiffuse={colorCorrection:!1,horizontalBlending:!0,verticalBlending:!0,boostMipMapSharpness:0,modifyTextureMap:{brightness:0,contrast:1},offset:{u:0,v:0,w:0},scale:{u:1,v:1,w:1},turbulence:{u:0,v:0,w:0},clamp:!1,textureResolution:null,bumpMultiplier:1,imfChan:null,filename:""},this.mapAmbient={colorCorrection:!1,horizontalBlending:!0,verticalBlending:!0,boostMipMapSharpness:0,modifyTextureMap:{brightness:0,contrast:1},offset:{u:0,v:0,w:0},scale:{u:1,v:1,w:1},turbulence:{u:0,v:0,w:0},clamp:!1,textureResolution:null,bumpMultiplier:1,imfChan:null,filename:""},this.mapSpecular={colorCorrection:!1,horizontalBlending:!0,verticalBlending:!0,boostMipMapSharpness:0,modifyTextureMap:{brightness:0,contrast:1},offset:{u:0,v:0,w:0},scale:{u:1,v:1,w:1},turbulence:{u:0,v:0,w:0},clamp:!1,textureResolution:null,bumpMultiplier:1,imfChan:null,filename:""},this.mapSpecularExponent={colorCorrection:!1,horizontalBlending:!0,verticalBlending:!0,boostMipMapSharpness:0,modifyTextureMap:{brightness:0,contrast:1},offset:{u:0,v:0,w:0},scale:{u:1,v:1,w:1},turbulence:{u:0,v:0,w:0},clamp:!1,textureResolution:null,bumpMultiplier:1,imfChan:null,filename:""},this.mapDissolve={colorCorrection:!1,horizontalBlending:!0,verticalBlending:!0,boostMipMapSharpness:0,modifyTextureMap:{brightness:0,contrast:1},offset:{u:0,v:0,w:0},scale:{u:1,v:1,w:1},turbulence:{u:0,v:0,w:0},clamp:!1,textureResolution:null,bumpMultiplier:1,imfChan:null,filename:""},this.antiAliasing=!1,this.mapBump={colorCorrection:!1,horizontalBlending:!0,verticalBlending:!0,boostMipMapSharpness:0,modifyTextureMap:{brightness:0,contrast:1},offset:{u:0,v:0,w:0},scale:{u:1,v:1,w:1},turbulence:{u:0,v:0,w:0},clamp:!1,textureResolution:null,bumpMultiplier:1,imfChan:null,filename:""},this.mapDisplacement={colorCorrection:!1,horizontalBlending:!0,verticalBlending:!0,boostMipMapSharpness:0,modifyTextureMap:{brightness:0,contrast:1},offset:{u:0,v:0,w:0},scale:{u:1,v:1,w:1},turbulence:{u:0,v:0,w:0},clamp:!1,textureResolution:null,bumpMultiplier:1,imfChan:null,filename:""},this.mapDecal={colorCorrection:!1,horizontalBlending:!0,verticalBlending:!0,boostMipMapSharpness:0,modifyTextureMap:{brightness:0,contrast:1},offset:{u:0,v:0,w:0},scale:{u:1,v:1,w:1},turbulence:{u:0,v:0,w:0},clamp:!1,textureResolution:null,bumpMultiplier:1,imfChan:null,filename:""},this.mapEmissive={colorCorrection:!1,horizontalBlending:!0,verticalBlending:!0,boostMipMapSharpness:0,modifyTextureMap:{brightness:0,contrast:1},offset:{u:0,v:0,w:0},scale:{u:1,v:1,w:1},turbulence:{u:0,v:0,w:0},clamp:!1,textureResolution:null,bumpMultiplier:1,imfChan:null,filename:""},this.mapReflections=[]}}const a=new r("sentinel");class i{constructor(e){this.data=e,this.currentMaterial=a,this.materials={},this.parse()}parse_newmtl(e){const t=e[0];this.currentMaterial=new r(t),this.materials[t]=this.currentMaterial}parseColor(e){if("spectral"==e[0])throw new Error("The MTL parser does not support spectral curve files. You will need to convert the MTL colors to either RGB or CIEXYZ.");if("xyz"==e[0])throw new Error("The MTL parser does not currently support XYZ colors. Either convert the XYZ values to RGB or create an issue to add support for XYZ");if(3==e.length){const[t,s,r]=e;return[parseFloat(t),parseFloat(s),parseFloat(r)]}const t=parseFloat(e[0]);return[t,t,t]}parse_Ka(e){this.currentMaterial.ambient=this.parseColor(e)}parse_Kd(e){this.currentMaterial.diffuse=this.parseColor(e)}parse_Ks(e){this.currentMaterial.specular=this.parseColor(e)}parse_Ke(e){this.currentMaterial.emissive=this.parseColor(e)}parse_Tf(e){this.currentMaterial.transmissionFilter=this.parseColor(e)}parse_d(e){this.currentMaterial.dissolve=parseFloat(e.pop()||"0")}parse_illum(e){this.currentMaterial.illumination=parseInt(e[0])}parse_Ni(e){this.currentMaterial.refractionIndex=parseFloat(e[0])}parse_Ns(e){this.currentMaterial.specularExponent=parseInt(e[0])}parse_sharpness(e){this.currentMaterial.sharpness=parseInt(e[0])}parse_cc(e,t){t.colorCorrection="on"==e[0]}parse_blendu(e,t){t.horizontalBlending="on"==e[0]}parse_blendv(e,t){t.verticalBlending="on"==e[0]}parse_boost(e,t){t.boostMipMapSharpness=parseFloat(e[0])}parse_mm(e,t){t.modifyTextureMap.brightness=parseFloat(e[0]),t.modifyTextureMap.contrast=parseFloat(e[1])}parse_ost(e,t,s){for(;e.length<3;)e.push(s.toString());t.u=parseFloat(e[0]),t.v=parseFloat(e[1]),t.w=parseFloat(e[2])}parse_o(e,t){this.parse_ost(e,t.offset,0)}parse_s(e,t){this.parse_ost(e,t.scale,1)}parse_t(e,t){this.parse_ost(e,t.turbulence,0)}parse_texres(e,t){t.textureResolution=parseFloat(e[0])}parse_clamp(e,t){t.clamp="on"==e[0]}parse_bm(e,t){t.bumpMultiplier=parseFloat(e[0])}parse_imfchan(e,t){t.imfChan=e[0]}parse_type(e,t){t.reflectionType=e[0]}parseOptions(e){const t={colorCorrection:!1,horizontalBlending:!0,verticalBlending:!0,boostMipMapSharpness:0,modifyTextureMap:{brightness:0,contrast:1},offset:{u:0,v:0,w:0},scale:{u:1,v:1,w:1},turbulence:{u:0,v:0,w:0},clamp:!1,textureResolution:null,bumpMultiplier:1,imfChan:null,filename:""};let s,r;const a={};for(e.reverse();e.length;){const t=e.pop();t.startsWith("-")?a[s=t.substr(1)]=[]:s&&a[s].push(t)}for(s in a){if(!a.hasOwnProperty(s))continue;r=a[s];const e=this[`parse_${s}`];e&&e.bind(this)(r,t)}return t}parseMap(e){let t,s="";e[0].startsWith("-")?(s=e.pop(),t=e):[s,...t]=e;const r=this.parseOptions(t);return r.filename=s.replace(/\\/g,"/"),r}parse_map_Ka(e){this.currentMaterial.mapAmbient=this.parseMap(e)}parse_map_Kd(e){this.currentMaterial.mapDiffuse=this.parseMap(e)}parse_map_Ks(e){this.currentMaterial.mapSpecular=this.parseMap(e)}parse_map_Ke(e){this.currentMaterial.mapEmissive=this.parseMap(e)}parse_map_Ns(e){this.currentMaterial.mapSpecularExponent=this.parseMap(e)}parse_map_d(e){this.currentMaterial.mapDissolve=this.parseMap(e)}parse_map_aat(e){this.currentMaterial.antiAliasing="on"==e[0]}parse_map_bump(e){this.currentMaterial.mapBump=this.parseMap(e)}parse_bump(e){this.parse_map_bump(e)}parse_disp(e){this.currentMaterial.mapDisplacement=this.parseMap(e)}parse_decal(e){this.currentMaterial.mapDecal=this.parseMap(e)}parse_refl(e){this.currentMaterial.mapReflections.push(this.parseMap(e))}parse(){const e=this.data.split(/\r?\n/);for(let t of e){if(!(t=t.trim())||t.startsWith("#"))continue;const[e,...s]=t.split(/\s/),r=this[`parse_${e}`];r?r.bind(this)(s):console.warn(`Don't know how to parse the directive: "${e}"`)}delete this.data,this.currentMaterial=a}}},"./src/mesh.ts":function(e,t,s){"use strict";s.r(t),s.d(t,"default",function(){return a});var r=s("./src/layout.ts");class a{constructor(e,t){this.name="",this.indicesPerMaterial=[],this.materialsByIndex={},this.tangents=[],this.bitangents=[],(t=t||{}).materials=t.materials||{},t.enableWTextureCoord=!!t.enableWTextureCoord,this.vertexNormals=[],this.textures=[],this.indices=[],this.textureStride=t.enableWTextureCoord?3:2;const s=[],r=[],a=[],n=[],o={};let l=-1,u=0;const c={verts:[],norms:[],textures:[],hashindices:{},indices:[[]],materialIndices:[],index:0},p=/^v\s/,h=/^vn\s/,f=/^vt\s/,d=/^f\s/,m=/\s+/,M=/^usemtl/,b=e.split("\n");for(let e of b){if(!(e=e.trim())||e.startsWith("#"))continue;const b=e.split(m);if(b.shift(),p.test(e))s.push(...b);else if(h.test(e))r.push(...b);else if(f.test(e)){let e=b;b.length>2&&!t.enableWTextureCoord?e=b.slice(0,2):2===b.length&&t.enableWTextureCoord&&e.push("0"),a.push(...e)}else if(M.test(e)){const e=b[0];e in o||(n.push(e),o[e]=n.length-1,o[e]>0&&c.indices.push([])),u=l=o[e]}else if(d.test(e)){const e=i(b);for(const i of e)for(let e=0,n=i.length;e<n;e++){const n=i[e]+","+l;if(n in c.hashindices)c.indices[u].push(c.hashindices[n]);else{const o=i[e].split("/"),p=o.length-1;if(c.verts.push(+s[3*(+o[0]-1)+0]),c.verts.push(+s[3*(+o[0]-1)+1]),c.verts.push(+s[3*(+o[0]-1)+2]),a.length){const e=t.enableWTextureCoord?3:2;c.textures.push(+a[(+o[1]-1)*e+0]),c.textures.push(+a[(+o[1]-1)*e+1]),t.enableWTextureCoord&&c.textures.push(+a[(+o[1]-1)*e+2])}c.norms.push(+r[3*(+o[p]-1)+0]),c.norms.push(+r[3*(+o[p]-1)+1]),c.norms.push(+r[3*(+o[p]-1)+2]),c.materialIndices.push(l),c.hashindices[n]=c.index,c.indices[u].push(c.hashindices[n]),c.index+=1}}}}this.vertices=c.verts,this.vertexNormals=c.norms,this.textures=c.textures,this.vertexMaterialIndices=c.materialIndices,this.indices=c.indices[u],this.indicesPerMaterial=c.indices,this.materialNames=n,this.materialIndices=o,this.materialsByIndex={},t.calcTangentsAndBitangents&&this.calculateTangentsAndBitangents()}calculateTangentsAndBitangents(){console.assert(!!(this.vertices&&this.vertices.length&&this.vertexNormals&&this.vertexNormals.length&&this.textures&&this.textures.length),"Missing attributes for calculating tangents and bitangents");const e={tangents:[...new Array(this.vertices.length)].map(e=>0),bitangents:[...new Array(this.vertices.length)].map(e=>0)},t=this.indices,s=this.vertices,r=this.vertexNormals,a=this.textures;for(let i=0;i<t.length;i+=3){const n=t[i+0],o=t[i+1],l=t[i+2],u=s[3*n+0],c=s[3*n+1],p=s[3*n+2],h=a[2*n+0],f=a[2*n+1],d=s[3*o+0],m=s[3*o+1],M=s[3*o+2],b=a[2*o+0],y=a[2*o+1],v=d-u,x=m-c,g=M-p,w=s[3*l+0]-u,T=s[3*l+1]-c,I=s[3*l+2]-p,A=b-h,E=y-f,S=a[2*l+0]-h,B=a[2*l+1]-f,_=A*B-E*S,L=1/Math.abs(_<1e-4?1:_),F=(v*B-w*E)*L,N=(x*B-T*E)*L,O=(g*B-I*E)*L,R=(w*A-v*S)*L,D=(T*A-x*S)*L,k=(I*A-g*S)*L,P=r[3*n+0],C=r[3*n+1],U=r[3*n+2],z=r[3*o+0],H=r[3*o+1],Y=r[3*o+2],j=r[3*l+0],G=r[3*l+1],W=r[3*l+2],X=F*P+N*C+O*U,q=F*z+N*H+O*Y,V=F*j+N*G+O*W,K=F-P*X,$=N-C*X,Z=O-U*X,J=F-z*q,Q=N-H*q,ee=O-Y*q,te=F-j*V,se=N-G*V,re=O-W*V,ae=Math.sqrt(K*K+$*$+Z*Z),ie=Math.sqrt(J*J+Q*Q+ee*ee),ne=Math.sqrt(te*te+se*se+re*re),oe=R*P+D*C+k*U,le=R*z+D*H+k*Y,ue=R*j+D*G+k*W,ce=R-P*oe,pe=D-C*oe,he=k-U*oe,fe=R-z*le,de=D-H*le,me=k-Y*le,Me=R-j*ue,be=D-G*ue,ye=k-W*ue,ve=Math.sqrt(ce*ce+pe*pe+he*he),xe=Math.sqrt(fe*fe+de*de+me*me),ge=Math.sqrt(Me*Me+be*be+ye*ye);e.tangents[3*n+0]+=K/ae,e.tangents[3*n+1]+=$/ae,e.tangents[3*n+2]+=Z/ae,e.tangents[3*o+0]+=J/ie,e.tangents[3*o+1]+=Q/ie,e.tangents[3*o+2]+=ee/ie,e.tangents[3*l+0]+=te/ne,e.tangents[3*l+1]+=se/ne,e.tangents[3*l+2]+=re/ne,e.bitangents[3*n+0]+=ce/ve,e.bitangents[3*n+1]+=pe/ve,e.bitangents[3*n+2]+=he/ve,e.bitangents[3*o+0]+=fe/xe,e.bitangents[3*o+1]+=de/xe,e.bitangents[3*o+2]+=me/xe,e.bitangents[3*l+0]+=Me/ge,e.bitangents[3*l+1]+=be/ge,e.bitangents[3*l+2]+=ye/ge}this.tangents=e.tangents,this.bitangents=e.bitangents}makeBufferData(e){const t=this.vertices.length/3,s=new ArrayBuffer(e.stride*t);s.numItems=t;const a=new DataView(s);for(let s=0,i=0;s<t;s++){i=s*e.stride;for(const t of e.attributes){const n=i+e.attributeMap[t.key].offset;switch(t.key){case r.Layout.POSITION.key:a.setFloat32(n,this.vertices[3*s],!0),a.setFloat32(n+4,this.vertices[3*s+1],!0),a.setFloat32(n+8,this.vertices[3*s+2],!0);break;case r.Layout.UV.key:a.setFloat32(n,this.textures[2*s],!0),a.setFloat32(n+4,this.textures[2*s+1],!0);break;case r.Layout.NORMAL.key:a.setFloat32(n,this.vertexNormals[3*s],!0),a.setFloat32(n+4,this.vertexNormals[3*s+1],!0),a.setFloat32(n+8,this.vertexNormals[3*s+2],!0);break;case r.Layout.MATERIAL_INDEX.key:a.setInt16(n,this.vertexMaterialIndices[s],!0);break;case r.Layout.AMBIENT.key:{const e=this.vertexMaterialIndices[s],t=this.materialsByIndex[e];if(!t){console.warn('Material "'+this.materialNames[e]+'" not found in mesh. Did you forget to call addMaterialLibrary(...)?"');break}a.setFloat32(n,t.ambient[0],!0),a.setFloat32(n+4,t.ambient[1],!0),a.setFloat32(n+8,t.ambient[2],!0);break}case r.Layout.DIFFUSE.key:{const e=this.vertexMaterialIndices[s],t=this.materialsByIndex[e];if(!t){console.warn('Material "'+this.materialNames[e]+'" not found in mesh. Did you forget to call addMaterialLibrary(...)?"');break}a.setFloat32(n,t.diffuse[0],!0),a.setFloat32(n+4,t.diffuse[1],!0),a.setFloat32(n+8,t.diffuse[2],!0);break}case r.Layout.SPECULAR.key:{const e=this.vertexMaterialIndices[s],t=this.materialsByIndex[e];if(!t){console.warn('Material "'+this.materialNames[e]+'" not found in mesh. Did you forget to call addMaterialLibrary(...)?"');break}a.setFloat32(n,t.specular[0],!0),a.setFloat32(n+4,t.specular[1],!0),a.setFloat32(n+8,t.specular[2],!0);break}case r.Layout.SPECULAR_EXPONENT.key:{const e=this.vertexMaterialIndices[s],t=this.materialsByIndex[e];if(!t){console.warn('Material "'+this.materialNames[e]+'" not found in mesh. Did you forget to call addMaterialLibrary(...)?"');break}a.setFloat32(n,t.specularExponent,!0);break}case r.Layout.EMISSIVE.key:{const e=this.vertexMaterialIndices[s],t=this.materialsByIndex[e];if(!t){console.warn('Material "'+this.materialNames[e]+'" not found in mesh. Did you forget to call addMaterialLibrary(...)?"');break}a.setFloat32(n,t.emissive[0],!0),a.setFloat32(n+4,t.emissive[1],!0),a.setFloat32(n+8,t.emissive[2],!0);break}case r.Layout.TRANSMISSION_FILTER.key:{const e=this.vertexMaterialIndices[s],t=this.materialsByIndex[e];if(!t){console.warn('Material "'+this.materialNames[e]+'" not found in mesh. Did you forget to call addMaterialLibrary(...)?"');break}a.setFloat32(n,t.transmissionFilter[0],!0),a.setFloat32(n+4,t.transmissionFilter[1],!0),a.setFloat32(n+8,t.transmissionFilter[2],!0);break}case r.Layout.DISSOLVE.key:{const e=this.vertexMaterialIndices[s],t=this.materialsByIndex[e];if(!t){console.warn('Material "'+this.materialNames[e]+'" not found in mesh. Did you forget to call addMaterialLibrary(...)?"');break}a.setFloat32(n,t.dissolve,!0);break}case r.Layout.ILLUMINATION.key:{const e=this.vertexMaterialIndices[s],t=this.materialsByIndex[e];if(!t){console.warn('Material "'+this.materialNames[e]+'" not found in mesh. Did you forget to call addMaterialLibrary(...)?"');break}a.setInt16(n,t.illumination,!0);break}case r.Layout.REFRACTION_INDEX.key:{const e=this.vertexMaterialIndices[s],t=this.materialsByIndex[e];if(!t){console.warn('Material "'+this.materialNames[e]+'" not found in mesh. Did you forget to call addMaterialLibrary(...)?"');break}a.setFloat32(n,t.refractionIndex,!0);break}case r.Layout.SHARPNESS.key:{const e=this.vertexMaterialIndices[s],t=this.materialsByIndex[e];if(!t){console.warn('Material "'+this.materialNames[e]+'" not found in mesh. Did you forget to call addMaterialLibrary(...)?"');break}a.setFloat32(n,t.sharpness,!0);break}case r.Layout.ANTI_ALIASING.key:{const e=this.vertexMaterialIndices[s],t=this.materialsByIndex[e];if(!t){console.warn('Material "'+this.materialNames[e]+'" not found in mesh. Did you forget to call addMaterialLibrary(...)?"');break}a.setInt16(n,t.antiAliasing?1:0,!0);break}}}}return s}makeIndexBufferData(){const e=new Uint16Array(this.indices);return e.numItems=this.indices.length,e}makeIndexBufferDataForMaterials(...e){const t=(new Array).concat(...e.map(e=>this.indicesPerMaterial[e])),s=new Uint16Array(t);return s.numItems=t.length,s}addMaterialLibrary(e){for(const t in e.materials){if(!(t in this.materialIndices))continue;const s=e.materials[t],r=this.materialIndices[s.name];this.materialsByIndex[r]=s}}}function*i(e){if(e.length<=3)yield e;else if(4===e.length)yield[e[0],e[1],e[2]],yield[e[2],e[3],e[0]];else for(let t=1;t<e.length-1;t++)yield[e[0],e[t],e[t+1]]}},"./src/utils.ts":function(e,t,s){"use strict";s.r(t),s.d(t,"downloadModels",function(){return n}),s.d(t,"downloadMeshes",function(){return o}),s.d(t,"initMeshBuffers",function(){return u}),s.d(t,"deleteMeshBuffers",function(){return c});var r=s("./src/mesh.ts"),a=s("./src/material.ts");function i(e,t){const s=["mapDiffuse","mapAmbient","mapSpecular","mapDissolve","mapBump","mapDisplacement","mapDecal","mapEmissive"];t.endsWith("/")||(t+="/");const r=[];for(const a in e.materials){if(!e.materials.hasOwnProperty(a))continue;const i=e.materials[a];for(const e of s){const s=i[e];if(!s||!s.filename)continue;const a=t+s.filename;r.push(fetch(a).then(e=>{if(!e.ok)throw new Error;return e.blob()}).then(function(e){const t=new Image;return t.src=URL.createObjectURL(e),s.texture=t,new Promise(e=>t.onload=e)}).catch(()=>{console.error(`Unable to download texture: ${a}`)}))}}return Promise.all(r)}function n(e){const t=[];for(const n of e){if(!n.obj)throw new Error('"obj" attribute of model object not set. The .obj file is required to be set in order to use downloadModels()');const e={indicesPerMaterial:!!n.indicesPerMaterial,calcTangentsAndBitangents:!!n.calcTangentsAndBitangents};let o=n.name;if(!o){const e=n.obj.split("/");o=e[e.length-1].replace(".obj","")}const l=Promise.resolve(o),u=fetch(n.obj).then(e=>e.text()).then(t=>new r.default(t,e));let c;if(n.mtl){const e="string"!=typeof(s=n).mtl?s.obj.replace(/\.obj$/,".mtl"):s.mtl;c=fetch(e).then(e=>e.text()).then(t=>{const s=new a.MaterialLibrary(t);if(!1!==n.downloadMtlTextures){let t=n.mtlTextureRoot;return t||(t=e.substr(0,e.lastIndexOf("/"))),Promise.all([Promise.resolve(s),i(s,t)])}return Promise.all([Promise.resolve(s),void 0])}).then(e=>e[0])}const p=[l,u,c];t.push(Promise.all(p))}var s;return Promise.all(t).then(e=>{const t={};for(const s of e){const[e,r,a]=s;r.name=e,a&&r.addMaterialLibrary(a),t[e]=r}return t})}function o(e,t,s){void 0===s&&(s={});const a=[];for(const t in e){if(!e.hasOwnProperty(t))continue;const s=e[t];a.push(fetch(s).then(e=>e.text()).then(e=>[t,new r.default(e)]))}Promise.all(a).then(e=>{for(const[t,r]of e)s[t]=r;return t(s)})}function l(e,t,s,r){const a=e.createBuffer(),i=t===e.ARRAY_BUFFER?Float32Array:Uint16Array;return e.bindBuffer(t,a),e.bufferData(t,new i(s),e.STATIC_DRAW),a.itemSize=r,a.numItems=s.length/r,a}function u(e,t){return t.normalBuffer=l(e,e.ARRAY_BUFFER,t.vertexNormals,3),t.textureBuffer=l(e,e.ARRAY_BUFFER,t.textures,t.textureStride),t.vertexBuffer=l(e,e.ARRAY_BUFFER,t.vertices,3),t.indexBuffer=l(e,e.ELEMENT_ARRAY_BUFFER,t.indices,1),t}function c(e,t){e.deleteBuffer(t.normalBuffer),e.deleteBuffer(t.textureBuffer),e.deleteBuffer(t.vertexBuffer),e.deleteBuffer(t.indexBuffer)}},0:function(e,t,s){e.exports=s("./src/index.ts")}})});
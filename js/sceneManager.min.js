!function(){let t=mat4.create(),e=mat3.create(),a={};function r(t,e,a,r,n,i){var o={};o.latitude=r,o.longitude=n,o.height=i;var l,g,s,u=satellite.geodeticToEcf(o);l=u.x,g=u.y,s=u.z;var m=Math.sin(r),c=Math.sin(n),M=Math.cos(r),v=Math.cos(n);f%=360;var f=DEG2RAD*t,x=DEG2RAD*e,R=-a*Math.cos(x)*Math.cos(f),h=a*Math.cos(x)*Math.sin(f),E=a*Math.sin(x);return{x:m*v*R+-c*h+M*v*E+l,y:m*c*R+v*h+M*c*E+g,z:-M*R+m*E+s}}!function(){var t,e,r,n,i,o,l,g,s,u,m,c={},M=!1,v=!1,f=mat4.create(),x=mat3.create();c.earthJ=0,c.earthEra=0,c.timeTextStr="",c.timeTextStrEmpty="",c.lightDirection=[],c.propRateDOM=$("#propRate-status-box"),c.pos=[0,0,0];var R=!1,h=!1;function E(){R&&h&&c.bumpMap.isReady&&c.specularMap.isReady&&(!0,c.loaded=!0)}c.loaded=!1,c.isDayNightToggle=!1,c.init=function(){let o=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(o,a.shaders.earth.frag),gl.compileShader(o);let l=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(l,a.shaders.earth.vert),gl.compileShader(l),s=gl.createProgram(),gl.attachShader(s,l),gl.attachShader(s,o),gl.linkProgram(s),s.aVertexPosition=gl.getAttribLocation(s,"aVertexPosition"),s.aTexCoord=gl.getAttribLocation(s,"aTexCoord"),s.aVertexNormal=gl.getAttribLocation(s,"aVertexNormal"),s.uPMatrix=gl.getUniformLocation(s,"uPMatrix"),s.uCamMatrix=gl.getUniformLocation(s,"uCamMatrix"),s.uMvMatrix=gl.getUniformLocation(s,"uMvMatrix"),s.uNormalMatrix=gl.getUniformLocation(s,"uNormalMatrix"),s.uLightDirection=gl.getUniformLocation(s,"uLightDirection"),s.uAmbientLightColor=gl.getUniformLocation(s,"uAmbientLightColor"),s.uDirectionalLightColor=gl.getUniformLocation(s,"uDirectionalLightColor"),s.uSampler=gl.getUniformLocation(s,"uSampler"),s.uNightSampler=gl.getUniformLocation(s,"uNightSampler"),s.uBumpMap=gl.getUniformLocation(s,"uBumpMap"),s.uSpecMap=gl.getUniformLocation(s,"uSpecMap"),u=gl.createTexture();var g=new Image;g.onload=function(){$("#loader-text").text("Painting the Earth..."),gl.bindTexture(gl.TEXTURE_2D,u),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,g),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),R=!0,E()},g.src=settingsManager.installDirectory+"textures/earthmap512.jpg",c.loadHiRes=(()=>{var t=new Image;t.src=settingsManager.installDirectory+"textures/earthmap4k.jpg",settingsManager.nasaImages&&(t.src=settingsManager.installDirectory+"textures/mercator-tex.jpg"),settingsManager.trusatImages&&(g.src=settingsManager.installDirectory+"textures/trusatvector-4096.jpg"),settingsManager.blueImages&&(t.src=settingsManager.installDirectory+"textures/world_blue-2048.png"),settingsManager.vectorImages&&(t.src=settingsManager.installDirectory+"textures/dayearthvector-4096.jpg"),settingsManager.hiresImages&&(t.src=settingsManager.installDirectory+"textures/earthmap8k.jpg"),settingsManager.hiresNoCloudsImages&&(t.src=settingsManager.installDirectory+"textures/earthmap8k.jpg"),t.onload=function(){gl.bindTexture(gl.TEXTURE_2D,u),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,t),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),R=!0,E()}}),m=gl.createTexture();var M=new Image;M.onload=function(){gl.bindTexture(gl.TEXTURE_2D,m),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,M),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),h=!0,E()},M.src=settingsManager.installDirectory+"textures/earthlights512.jpg",c.loadHiResNight=(()=>{var t=new Image;settingsManager.smallImages||(t.src=settingsManager.installDirectory+"textures/earthlights4k.jpg"),settingsManager.vectorImages&&(t.src=settingsManager.installDirectory+"textures/dayearthvector-4096.jpg"),settingsManager.hiresImages&&(t.src=settingsManager.installDirectory+"textures/earthlights10k.jpg"),t.onload=function(){gl.bindTexture(gl.TEXTURE_2D,m),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,t),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),h=!0,E()}}),c.bumpMap={},c.bumpMap.isReady=!1,c.bumpMap.texture=gl.createTexture(),c.bumpMap.img=new Image,c.bumpMap.img.onload=function(){gl.bindTexture(gl.TEXTURE_2D,c.bumpMap.texture),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,c.bumpMap.img),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),c.bumpMap.isReady=!0,E()},c.bumpMap.img.src=settingsManager.installDirectory+"textures/earthbump8k.jpg",settingsManager.smallImages&&(c.bumpMap.img.src=settingsManager.installDirectory+"textures/earthbump256.jpg"),c.specularMap={},c.specularMap.isReady=!1,c.specularMap.texture=gl.createTexture(),c.specularMap.img=new Image,c.specularMap.img.onload=function(){gl.bindTexture(gl.TEXTURE_2D,c.specularMap.texture),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,c.specularMap.img),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),c.specularMap.isReady=!0,E()},c.specularMap.img.src=settingsManager.installDirectory+"textures/earthspec8k.jpg",settingsManager.smallImages&&(c.specularMap.img.src=settingsManager.installDirectory+"textures/earthspec256.jpg");var v=[],f=[],x=[];for(let t=0;t<=64;t++){var A=Math.PI/64*t-Math.PI/2,T=Math.cos(Math.abs(A)),d=Math.sin(A);for(let e=0;e<=64;e++){var p=2*Math.PI/64*e,D=Math.cos(p)*T,_=Math.sin(p)*T,S=1-t/64,b=.5+e/64;v.push(D*RADIUS_OF_EARTH),v.push(_*RADIUS_OF_EARTH),v.push(d*RADIUS_OF_EARTH),x.push(b),x.push(S),f.push(D),f.push(_),f.push(d)}}var U=[];for(let t=0;t<64;t++)for(let e=0;e<64;e++){var C=65*t+e,F=C+1,P=65*(t+1)+e,N=P+1;U.push(C),U.push(F),U.push(P),U.push(P),U.push(N),U.push(F)}i=U.length,t=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,t),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(v),gl.STATIC_DRAW),e=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,e),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(f),gl.STATIC_DRAW),r=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,r),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(x),gl.STATIC_DRAW),n=gl.createBuffer(),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,n),gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(U),gl.STATIC_DRAW),c.loaded=!0},c.update=(()=>{if(c.lastTime=o,o=timeManager.propTime(),timeManager.selectedDate=o,c.lastTime-o<300){for(c.tDS=o.toJSON(),c.timeTextStr=c.timeTextStrEmpty,c.iText=11;c.iText<20;c.iText++)c.iText>11&&(c.timeTextStr+=c.tDS[c.iText-1]);settingsManager.isPropRateChange&&!settingsManager.isAlwaysHidePropRate&&(timeManager.propRate>1.01||timeManager.propRate<.99?(timeManager.propRate<10&&c.propRateDOM.html("Propagation Speed: "+timeManager.propRate.toFixed(1)+"x"),timeManager.propRate>=10&&c.propRateDOM.html("Propagation Speed: "+timeManager.propRate.toFixed(2)+"x"),c.propRateDOM.show(),v=!0):v&&(c.propRateDOM.hide(),v=!1),settingsManager.isPropRateChange=!1),settingsManager.disableUI||(M?document.getElementById("datetime-text").childNodes[0].nodeValue=`${c.timeTextStr}`:(document.getElementById("datetime-text").innerText=`${c.timeTextStr}`,M=!0))}!settingsManager.isEditTime&&settingsManager.cruncherReady||$("#datetime-input-tb").val(timeManager.selectedDate.toISOString().slice(0,10)+" "+timeManager.selectedDate.toISOString().slice(11,19)),c.earthJ=timeManager.jday(o.getUTCFullYear(),o.getUTCMonth()+1,o.getUTCDate(),o.getUTCHours(),o.getUTCMinutes(),o.getUTCSeconds()),c.earthJ+=o.getUTCMilliseconds()*MILLISECONDS_PER_DAY,c.earthEra=satellite.gstime(c.earthJ),sun.currentDirection(),vec3.normalize(c.lightDirection,c.lightDirection),l=f,mat4.identity(l),mat4.rotateZ(l,l,c.earthEra),mat4.translate(l,l,c.pos),g=x,mat3.normalFromMat4(g,l)}),c.draw=function(a,o){if(c.loaded)return gl.useProgram(s),gl.bindFramebuffer(gl.FRAMEBUFFER,null),gl.uniformMatrix3fv(s.uNormalMatrix,!1,g),gl.uniformMatrix4fv(s.uMvMatrix,!1,l),gl.uniformMatrix4fv(s.uPMatrix,!1,a),gl.uniformMatrix4fv(s.uCamMatrix,!1,o),gl.uniform3fv(s.uLightDirection,c.lightDirection),gl.uniform3fv(s.uAmbientLightColor,[.1,.1,.1]),gl.uniform3fv(s.uDirectionalLightColor,[1,1,1]),gl.uniform1i(s.uSampler,0),gl.activeTexture(gl.TEXTURE0),gl.bindTexture(gl.TEXTURE_2D,u),gl.uniform1i(s.uNightSampler,1),gl.activeTexture(gl.TEXTURE1),c.isDayNightToggle?gl.bindTexture(gl.TEXTURE_2D,u):gl.bindTexture(gl.TEXTURE_2D,m),gl.uniform1i(s.uBumpMap,2),gl.activeTexture(gl.TEXTURE2),gl.bindTexture(gl.TEXTURE_2D,c.bumpMap.texture),gl.uniform1i(s.uSpecMap,3),gl.activeTexture(gl.TEXTURE3),gl.bindTexture(gl.TEXTURE_2D,c.specularMap.texture),gl.bindBuffer(gl.ARRAY_BUFFER,r),gl.enableVertexAttribArray(s.aTexCoord),gl.vertexAttribPointer(s.aTexCoord,2,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,t),gl.enableVertexAttribArray(s.aVertexPosition),gl.vertexAttribPointer(s.aVertexPosition,3,gl.FLOAT,!1,0,0),gl.vertexAttribPointer(gl.pickShaderProgram.aPos,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,e),gl.enableVertexAttribArray(s.aVertexNormal),gl.vertexAttribPointer(s.aVertexNormal,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,n),gl.drawElements(gl.TRIANGLES,i,gl.UNSIGNED_SHORT,0),gl.disableVertexAttribArray(s.aTexCoord),gl.disableVertexAttribArray(s.aVertexPosition),gl.disableVertexAttribArray(s.aVertexNormal),gl.useProgram(gl.pickShaderProgram),gl.bindFramebuffer(gl.FRAMEBUFFER,gl.pickFb),gl.uniformMatrix4fv(gl.pickShaderProgram.uMvMatrix,!1,l),gl.disableVertexAttribArray(gl.pickShaderProgram.aColor),gl.enableVertexAttribArray(gl.pickShaderProgram.aPos),gl.drawElements(gl.TRIANGLES,i,gl.UNSIGNED_SHORT,0),!0},window.earth=c}(),function(){var r={};let n,i,o,l;r.latSegs=64,r.lonSegs=64,r.lightDirection=[],r.init=function(){let t=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(t,a.shaders.atmosphere.frag),gl.compileShader(t);let e=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(e,a.shaders.atmosphere.vert),gl.compileShader(e),l=gl.createProgram(),gl.attachShader(l,e),gl.attachShader(l,t),gl.linkProgram(l),l.aVertexPosition=gl.getAttribLocation(l,"aVertexPosition"),l.aVertexNormal=gl.getAttribLocation(l,"aVertexNormal"),l.uPMatrix=gl.getUniformLocation(l,"uPMatrix"),l.uCamMatrix=gl.getUniformLocation(l,"uCamMatrix"),l.uMvMatrix=gl.getUniformLocation(l,"uMvMatrix"),l.uNormalMatrix=gl.getUniformLocation(l,"uNormalMatrix"),l.uLightDirection=gl.getUniformLocation(l,"uLightDirection");let g=[],s=[];for(let t=0;t<=r.latSegs;t++){let e=Math.PI/r.latSegs*t-Math.PI/2,a=Math.cos(Math.abs(e)),n=Math.sin(e);for(let t=0;t<=r.lonSegs;t++){let e=2*Math.PI/r.lonSegs*t,i=Math.cos(e)*a,o=Math.sin(e)*a;g.push(i*settingsManager.atmosphereSize),g.push(o*settingsManager.atmosphereSize),g.push(n*settingsManager.atmosphereSize),s.push(i),s.push(o),s.push(n)}}let u=[];for(let t=0;t<r.latSegs;t++)for(let e=0;e<r.lonSegs;e++){var m=t*(r.lonSegs+1)+e,c=m+1,M=(t+1)*(r.lonSegs+1)+e,v=M+1;u.push(m),u.push(c),u.push(M),u.push(M),u.push(v),u.push(c)}r.vertCount=u.length,n=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,n),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(g),gl.STATIC_DRAW),i=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,i),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(s),gl.STATIC_DRAW),o=gl.createBuffer(),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,o),gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(u),gl.STATIC_DRAW),r.loaded=!0},r.update=(()=>{r.mvMatrix=t,mat4.identity(r.mvMatrix),mat4.rotateY(r.mvMatrix,r.mvMatrix,90*DEG2RAD-camPitch),mat4.translate(r.mvMatrix,r.mvMatrix,[0,0,0]),r.nMatrix=e,mat3.normalFromMat4(r.nMatrix,r.mvMatrix)}),r.draw=function(t,e){if(r.loaded)return gl.enable(gl.BLEND),gl.disable(gl.DEPTH_TEST),gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA),gl.useProgram(l),gl.bindFramebuffer(gl.FRAMEBUFFER,null),gl.uniformMatrix3fv(l.uNormalMatrix,!1,r.nMatrix),gl.uniformMatrix4fv(l.uMvMatrix,!1,r.mvMatrix),gl.uniformMatrix4fv(l.uPMatrix,!1,t),gl.uniformMatrix4fv(l.uCamMatrix,!1,e),gl.uniform3fv(l.uLightDirection,earth.lightDirection),gl.bindBuffer(gl.ARRAY_BUFFER,n),gl.enableVertexAttribArray(l.aVertexPosition),gl.vertexAttribPointer(l.aVertexPosition,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,i),gl.enableVertexAttribArray(l.aVertexNormal),gl.vertexAttribPointer(l.aVertexNormal,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,o),gl.drawElements(gl.TRIANGLES,r.vertCount,gl.UNSIGNED_SHORT,0),gl.disableVertexAttribArray(l.aVertexPosition),gl.disableVertexAttribArray(l.aVertexNormal),gl.disable(gl.BLEND),gl.enable(gl.DEPTH_TEST),!0},window.atmosphere=r}(),function(){var n={};n.sunvar={},n.currentDirection=function(){return n.sunvar.now=timeManager.propTime(),n.sunvar.j=timeManager.jday(n.sunvar.now.getUTCFullYear(),n.sunvar.now.getUTCMonth()+1,n.sunvar.now.getUTCDate(),n.sunvar.now.getUTCHours(),n.sunvar.now.getUTCMinutes(),n.sunvar.now.getUTCSeconds()),n.sunvar.j+=n.sunvar.now.getUTCMilliseconds()*MILLISECONDS_PER_DAY,n.getDirection(n.sunvar.j)},n.getDirection=function(t){n.sunvar.n=t-2451545,n.sunvar.L=280.46+.9856474*n.sunvar.n,n.sunvar.g=357.528+.9856003*n.sunvar.n,n.sunvar.L=n.sunvar.L%360,n.sunvar.g=n.sunvar.g%360,n.sunvar.ecLon=n.sunvar.L+1.915*Math.sin(n.sunvar.g*DEG2RAD)+.02*Math.sin(2*n.sunvar.g*DEG2RAD),n.sunvar.ob=function(t){return n.sunvar.t=(t-2451545)/3652500,n.sunvar.obliq=84381.448-4680.93*n.sunvar.t-1.55*Math.pow(n.sunvar.t,2)+1999.25*Math.pow(n.sunvar.t,3)-51.38*Math.pow(n.sunvar.t,4)-249.67*Math.pow(n.sunvar.t,5)-39.05*Math.pow(n.sunvar.t,6)+7.12*Math.pow(n.sunvar.t,7)+27.87*Math.pow(n.sunvar.t,8)+5.79*Math.pow(n.sunvar.t,9)+2.45*Math.pow(n.sunvar.t,10),n.sunvar.obliq/3600}(t),earth.lightDirection[0]=Math.cos(n.sunvar.ecLon*DEG2RAD),earth.lightDirection[1]=Math.cos(n.sunvar.ob*DEG2RAD)*Math.sin(n.sunvar.ecLon*DEG2RAD),earth.lightDirection[2]=Math.sin(n.sunvar.ob*DEG2RAD)*Math.sin(n.sunvar.ecLon*DEG2RAD)},n.getXYZ=function(){var t=timeManager.propTime();j=timeManager.jday(t.getUTCFullYear(),t.getUTCMonth()+1,t.getUTCDate(),t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds()),j+=t.getUTCMilliseconds()*MILLISECONDS_PER_DAY;var e=satellite.gstime(j),a=new A.JulianDay(j),i=A.EclCoord.fromWgs84(0,0,0),o=A.Solar.topocentricPosition(a,i,!1);azimuth=o.hz.az*RAD2DEG+180,elevation=o.hz.alt*RAD2DEG%360;var l=new A.JulianDay(A.JulianDay.dateToJD(timeManager.propTime())).jdJ2000Century();return n.sunvar.g=180*A.Solar.meanAnomaly(l)/Math.PI,n.sunvar.g=n.sunvar.g%360,n.sunvar.R=1.00014-.01671*Math.cos(n.sunvar.g)-14e-5*Math.cos(2*n.sunvar.g),range=149597870700*n.sunvar.R/1e3,n.eci=satellite.ecfToEci(r(azimuth,elevation,range,0,0,0),e),{x:n.eci.x,y:n.eci.y,z:n.eci.z}};let i,o,l,g,s,u,m;n.pos=[0,0,0];n.init=function(){let t=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(t,a.shaders.sun.frag),gl.compileShader(t);let e=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(e,a.shaders.sun.vert),gl.compileShader(e),m=gl.createProgram(),gl.attachShader(m,e),gl.attachShader(m,t),gl.linkProgram(m),m.aVertexPosition=gl.getAttribLocation(m,"aVertexPosition"),m.aTexCoord=gl.getAttribLocation(m,"aTexCoord"),m.aVertexNormal=gl.getAttribLocation(m,"aVertexNormal"),m.uPMatrix=gl.getUniformLocation(m,"uPMatrix"),m.uCamMatrix=gl.getUniformLocation(m,"uCamMatrix"),m.uMvMatrix=gl.getUniformLocation(m,"uMvMatrix"),m.uNormalMatrix=gl.getUniformLocation(m,"uNormalMatrix"),m.uLightDirection=gl.getUniformLocation(m,"uLightDirection");var r=[],s=[],u=[];for(let t=0;t<=64;t++){var c=Math.PI/64*t-Math.PI/2,M=Math.cos(Math.abs(c)),v=Math.sin(c);for(let e=0;e<=64;e++){var f=2*Math.PI/64*e,x=Math.cos(f)*M,R=Math.sin(f)*M,h=1-t/64,E=.5+e/64;r.push(x*RADIUS_OF_DRAW_SUN),r.push(R*RADIUS_OF_DRAW_SUN),r.push(v*RADIUS_OF_DRAW_SUN),u.push(E),u.push(h),s.push(x),s.push(R),s.push(v)}}var A=[];for(let t=0;t<64;t++)for(let e=0;e<64;e++){var T=65*t+e,d=T+1,p=65*(t+1)+e,D=p+1;A.push(T),A.push(d),A.push(p),A.push(p),A.push(D),A.push(d)}g=A.length,i=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,i),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(r),gl.STATIC_DRAW),o=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,o),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(s),gl.STATIC_DRAW),l=gl.createBuffer(),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,l),gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(A),gl.STATIC_DRAW),n.loaded=!0},n.draw=function(a,r){if(!n.loaded)return;n.realXyz=n.getXYZ();let c=Math.max(Math.max(Math.abs(n.realXyz.x),Math.abs(n.realXyz.y)),Math.abs(n.realXyz.z));return n.pos[0]=n.realXyz.x/c*SUN_SCALAR_DISTANCE,n.pos[1]=n.realXyz.y/c*SUN_SCALAR_DISTANCE,n.pos[2]=n.realXyz.z/c*SUN_SCALAR_DISTANCE,s=t,mat4.identity(s),mat4.translate(s,s,n.pos),mat4.rotateX(s,s,-camPitch),mat4.rotateZ(s,s,-camYaw),u=e,mat3.normalFromMat4(u,s),gl.enable(gl.BLEND),gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA),gl.useProgram(m),gl.bindFramebuffer(gl.FRAMEBUFFER,null),gl.uniformMatrix3fv(m.uNormalMatrix,!1,u),gl.uniformMatrix4fv(m.uMvMatrix,!1,s),gl.uniformMatrix4fv(m.uPMatrix,!1,a),gl.uniformMatrix4fv(m.uCamMatrix,!1,r),gl.uniform3fv(m.uLightDirection,earth.lightDirection),gl.bindBuffer(gl.ARRAY_BUFFER,i),gl.enableVertexAttribArray(m.aVertexPosition),gl.vertexAttribPointer(m.aVertexPosition,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,o),gl.enableVertexAttribArray(m.aVertexNormal),gl.vertexAttribPointer(m.aVertexNormal,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,l),gl.drawElements(gl.TRIANGLES,g,gl.UNSIGNED_SHORT,0),!0},window.sun=n}(),function(){let n,i,o,l,g,s,u;var m;moon={},moon.pos=[0,0,0];moon.getXYZ=(()=>{var t=timeManager.propTime();j=timeManager.jday(t.getUTCFullYear(),t.getUTCMonth()+1,t.getUTCDate(),t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds()),j+=t.getUTCMilliseconds()*MILLISECONDS_PER_DAY;var e=satellite.gstime(j);let a=SunCalc.getMoonPosition(timeManager.propTime(),0,0);return moon.position=satellite.ecfToEci(r(a.azimuth*RAD2DEG,a.altitude*RAD2DEG,a.distance,0,0,0),e),{x:moon.position.x,y:moon.position.y,z:moon.position.z}}),moon.init=function(){let t=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(t,a.shaders.moon.frag),gl.compileShader(t);let e=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(e,a.shaders.moon.vert),gl.compileShader(e),u=gl.createProgram(),gl.attachShader(u,e),gl.attachShader(u,t),gl.linkProgram(u),u.aVertexPosition=gl.getAttribLocation(u,"aVertexPosition"),u.aTexCoord=gl.getAttribLocation(u,"aTexCoord"),u.aVertexNormal=gl.getAttribLocation(u,"aVertexNormal"),u.uPMatrix=gl.getUniformLocation(u,"uPMatrix"),u.uCamMatrix=gl.getUniformLocation(u,"uCamMatrix"),u.uMvMatrix=gl.getUniformLocation(u,"uMvMatrix"),u.uNormalMatrix=gl.getUniformLocation(u,"uNormalMatrix"),u.uSunPos=gl.getUniformLocation(u,"uSunPos"),u.uSampler=gl.getUniformLocation(u,"uSampler"),m=gl.createTexture();var r=new Image;r.onload=function(){gl.bindTexture(gl.TEXTURE_2D,m),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,r),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT);let t=moon.getXYZ(),e=Math.max(Math.max(Math.abs(t.x),Math.abs(t.y)),Math.abs(t.z));moon.pos[0]=t.x/e*MOON_SCALAR_DISTANCE,moon.pos[1]=t.y/e*MOON_SCALAR_DISTANCE,moon.pos[2]=t.z/e*MOON_SCALAR_DISTANCE,!0&&(moon.loaded=!0)},r.src=settingsManager.installDirectory+"textures/moonmap256.jpg";var g=[],s=[],c=[];for(let t=0;t<=32;t++){var M=Math.PI/32*t-Math.PI/2,v=Math.cos(Math.abs(M)),f=Math.sin(M);for(let e=0;e<=32;e++){var x=2*Math.PI/32*e,R=Math.cos(x)*v,h=Math.sin(x)*v,E=1-t/32,A=.5+e/32;g.push(R*RADIUS_OF_DRAW_MOON),g.push(h*RADIUS_OF_DRAW_MOON),g.push(f*RADIUS_OF_DRAW_MOON),c.push(A),c.push(E),s.push(R),s.push(h),s.push(f)}}var T=[];for(let t=0;t<32;t++)for(let e=0;e<32;e++){var d=33*t+e,p=d+1,D=33*(t+1)+e,_=D+1;T.push(d),T.push(p),T.push(D),T.push(D),T.push(_),T.push(p)}l=T.length,n=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,n),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(g),gl.STATIC_DRAW),i=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,i),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(s),gl.STATIC_DRAW),texCoordBuf=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,texCoordBuf),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(c),gl.STATIC_DRAW),o=gl.createBuffer(),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,o),gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(T),gl.STATIC_DRAW)},moon.draw=function(a,r){if(!moon.loaded)return;let c=moon.getXYZ(),M=Math.max(Math.max(Math.abs(c.x),Math.abs(c.y)),Math.abs(c.z));return moon.pos[0]=c.x/M*MOON_SCALAR_DISTANCE,moon.pos[1]=c.y/M*MOON_SCALAR_DISTANCE,moon.pos[2]=c.z/M*MOON_SCALAR_DISTANCE,g=t,mat4.identity(g),mat4.translate(g,g,moon.pos),s=e,mat3.normalFromMat4(s,g),gl.useProgram(u),gl.bindFramebuffer(gl.FRAMEBUFFER,null),gl.uniformMatrix3fv(u.uNormalMatrix,!1,s),gl.uniformMatrix4fv(u.uMvMatrix,!1,g),gl.uniformMatrix4fv(u.uPMatrix,!1,a),gl.uniformMatrix4fv(u.uCamMatrix,!1,r),gl.uniform3fv(u.uSunPos,sun.pos),gl.uniform1i(u.uSampler,0),gl.activeTexture(gl.TEXTURE0),gl.bindTexture(gl.TEXTURE_2D,m),gl.bindBuffer(gl.ARRAY_BUFFER,texCoordBuf),gl.enableVertexAttribArray(u.aTexCoord),gl.vertexAttribPointer(u.aTexCoord,2,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,n),gl.enableVertexAttribArray(u.aVertexPosition),gl.vertexAttribPointer(u.aVertexPosition,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,i),gl.enableVertexAttribArray(u.aVertexNormal),gl.vertexAttribPointer(u.aVertexNormal,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,o),gl.drawElements(gl.TRIANGLES,l,gl.UNSIGNED_SHORT,0),gl.disableVertexAttribArray(u.aTexCoord),gl.disableVertexAttribArray(u.aVertexPosition),gl.disableVertexAttribArray(u.aVertexNormal),!0},window.moon=moon}(),a.shaders={earth:{frag:"\n        precision mediump float;\n\n        uniform vec3 uAmbientLightColor;\n        uniform vec3 uDirectionalLightColor;\n        uniform vec3 uLightDirection;\n\n        varying vec2 vUv;\n        varying vec3 vNormal;\n\n        uniform sampler2D uSampler;\n        uniform sampler2D uNightSampler;\n        uniform sampler2D uBumpMap;\n        uniform sampler2D uSpecMap;\n\n        void main(void) {\n          // float shininess = 1.0;\n          // float diffuse = pow(max(dot(vNormal, uLightDirection), 0.0),shininess);\n          // float diffuseLight = 0.7;\n          float diffuse = max(dot(vNormal, uLightDirection), 0.0);\n          vec3 bumpTexColor = texture2D(uBumpMap, vUv).rgb * diffuse * 0.4;\n          vec3 specLightColor = texture2D(uSpecMap, vUv).rgb * diffuse * 0.1;\n\n          vec3 dayColor = uAmbientLightColor + (uDirectionalLightColor * diffuse);\n          vec3 dayTexColor = texture2D(uSampler, vUv).rgb * dayColor;\n          vec3 nightColor = texture2D(uNightSampler, vUv).rgb * pow(1.0 - diffuse, 2.0);\n\n          gl_FragColor = vec4(dayTexColor + nightColor + bumpTexColor + specLightColor, 1.0);\n        }\n        ",vert:"\n        attribute vec3 aVertexPosition;\n\n        attribute vec2 aTexCoord;\n        attribute vec3 aVertexNormal;\n        uniform mat4 uPMatrix;\n        uniform mat4 uCamMatrix;\n        uniform mat4 uMvMatrix;\n        uniform mat3 uNormalMatrix;\n\n        varying vec2 vUv;\n        varying vec3 vNormal;\n\n        void main(void) {\n          gl_Position = uPMatrix * uCamMatrix * uMvMatrix * vec4(aVertexPosition, 1.0);\n          vUv = aTexCoord;\n\n          vNormal = uNormalMatrix * aVertexNormal;\n        }\n        "},sun:{frag:"\n        precision mediump float;\n        uniform vec3 uLightDirection;\n\n        varying vec3 vNormal;\n        varying float vDist;\n\n        void main(void) {\n          // Hide the Back Side of the Sphere to prevent duplicate suns\n          float darkAmount = max(dot(vNormal, -uLightDirection), 0.1);\n          // Create blur effect\n          float a = pow(vDist / 2.0 * -1.0 + 1.1, 10.0) * darkAmount;\n          // Set colors\n          float r = 1.0 * a;\n          float g = 1.0 * a;\n          float b = 0.4 * a;\n          gl_FragColor = vec4(vec3(r,g,b), a);\n        }\n      ",vert:`\n        attribute vec3 aVertexPosition;\n        attribute vec3 aVertexNormal;\n\n        uniform mat4 uPMatrix;\n        uniform mat4 uCamMatrix;\n        uniform mat4 uMvMatrix;\n        uniform mat3 uNormalMatrix;\n\n        varying vec3 vNormal;\n        varying float vDist;\n\n        void main(void) {\n          vec4 position1 = uCamMatrix * uMvMatrix * vec4(aVertexPosition, 1.0);\n          vec4 position0 = uCamMatrix * uMvMatrix * vec4(vec3(0.0,0.0,0.0), 1.0);\n          gl_Position = uPMatrix * position1;\n          vDist = distance(position0.xz,position1.xz) / ${RADIUS_OF_DRAW_SUN}.0;\n          vNormal = uNormalMatrix * aVertexNormal;\n        }`},moon:{frag:"\n        precision mediump float;\n\n        uniform vec3 uLightDirection;\n        varying vec2 vUv;\n        varying vec3 vNormal;\n\n        uniform sampler2D uSampler;\n        uniform vec3 uSunPos;\n\n        void main(void) {\n          // Moon Position - Sun Position\n          vec3 LightDirection = uSunPos - vec3(0.0,0.0,0.0);\n          LightDirection = normalize(LightDirection);\n\n          float diffuse = max(dot(vNormal, LightDirection), 0.0);\n          vec3 ambientLight = vec3(0.05,0.05,0.05);\n\n          // float diffuseLight = 0.7;\n          vec3 litTexColor = texture2D(uSampler, vUv).rgb * (ambientLight + diffuse * 1.5);\n          gl_FragColor = vec4(litTexColor, 1.0);\n        }\n      ",vert:"\n        attribute vec3 aVertexPosition;\n\n        attribute vec2 aTexCoord;\n        attribute vec3 aVertexNormal;\n\n        uniform mat4 uPMatrix;\n        uniform mat4 uCamMatrix;\n        uniform mat4 uMvMatrix;\n        uniform mat3 uNormalMatrix;\n\n        varying vec2 vUv;\n        varying vec3 vNormal;\n        void main(void) {\n          gl_Position = uPMatrix * uCamMatrix * uMvMatrix * vec4(aVertexPosition, 1.0);\n          vUv = aTexCoord;\n\n          vNormal = uNormalMatrix * aVertexNormal;\n        }\n      "},atmosphere:{frag:"\n        precision mediump float;\n\n        uniform vec3 uLightDirection;\n        varying vec3 vNormal;\n        varying float vDist;\n\n        void main () {\n          float sunAmount = max(dot(vNormal, uLightDirection), 0.1);\n          float darkAmount = max(dot(vNormal, -uLightDirection), 0.0);\n          float a4 = pow(1.1 - vDist / 2.0, 1.1) * 2.0;\n          float r = 1.0 - sunAmount;\n          float g = max(1.0 - sunAmount, 0.8) - darkAmount;\n          float b = max(sunAmount, 0.8) - darkAmount;\n          float a1 = min(sunAmount, 0.8) * 2.0;\n          float a2 = min(pow(darkAmount / 1.15, 2.0),0.2);\n          float a3 = pow(vDist,2.0) * -1.0 + 1.0;\n          float a = min(a1 - a2, a3) * a4;\n          gl_FragColor    = vec4(vec3(r,g,b), a);\n        }\n      ",vert:`\n        attribute vec3 aVertexPosition;\n        attribute vec3 aVertexNormal;\n\n        uniform mat4 uPMatrix;\n        uniform mat4 uCamMatrix;\n        uniform mat4 uMvMatrix;\n        uniform mat3 uNormalMatrix;\n\n        varying vec3 vNormal;\n        varying float vDist;\n\n        void main(void) {\n          vec4 position1 = uCamMatrix * uMvMatrix * vec4(aVertexPosition, 1.0);\n          vec4 position0 = uCamMatrix * uMvMatrix * vec4(vec3(0.0,0.0,0.0), 1.0);\n          gl_Position = uPMatrix * position1;\n          vDist = distance(position0.xz,position1.xz) / ${settingsManager.atmosphereSize}.0;\n          vNormal = normalize( uNormalMatrix * aVertexNormal );\n        }\n      `}},window.sceneManager=a}(),function(){var t={};t.shaderData=[{name:"dot-fragment.glsl",code:`\n      precision mediump float;\n\n      varying vec4 vColor;\n      varying float vStar;\n      varying float vDist;\n\n      float when_lt(float x, float y) {\n        return max(sign(y - x), 0.0);\n      }\n      float when_ge(float x, float y) {\n        return 1.0 - when_lt(x, y);\n      }\n\n      void main(void) {\n\n        vec2 ptCoord = gl_PointCoord * 2.0 - vec2(1.0, 1.0);\n        float r = 0.0;\n        float alpha = 0.0;\n        // If not a star and not on the ground\n        r += (${settingsManager.satShader.blurFactor1} - min(abs(length(ptCoord)), 1.0)) * when_lt(vDist, 200000.0) * when_ge(vDist, 6421.0);\n        alpha += (pow(2.0 * r + ${settingsManager.satShader.blurFactor2}, 3.0)) * when_lt(vDist, 200000.0) * when_ge(vDist, 6421.0);\n\n        // If on the ground\n        r += (${settingsManager.satShader.blurFactor1} - min(abs(length(ptCoord)), 1.0)) * when_lt(vDist, 6421.0);\n        alpha += (pow(2.0 * r + ${settingsManager.satShader.blurFactor2}, 3.0)) * when_lt(vDist, 6471.0);\n\n        // If a star\n        r += (${settingsManager.satShader.blurFactor3} - min(abs(length(ptCoord)), 1.0)) * when_ge(vDist, 200000.0);\n        alpha += (pow(2.0 * r + ${settingsManager.satShader.blurFactor4}, 3.0)) * when_ge(vDist, 200000.0);\n\n        alpha = min(alpha, 1.0);\n        gl_FragColor = vec4(vColor.rgb, vColor.a * alpha);\n      }\n    `},{name:"dot-vertex-var.glsl",code:`\n        attribute vec3 aPos;\n        attribute vec4 aColor;\n        attribute float aStar;\n\n        uniform float minSize;\n        uniform float maxSize;\n\n        uniform mat4 uCamMatrix;\n        uniform mat4 uMvMatrix;\n        uniform mat4 uPMatrix;\n\n        varying vec4 vColor;\n        varying float vStar;\n        varying float vDist;\n\n        float when_lt(float x, float y) {\n          return max(sign(y - x), 0.0);\n        }\n        float when_ge(float x, float y) {\n          return 1.0 - when_lt(x, y);\n        }\n\n        void main(void) {\n          vec4 position = uPMatrix * uCamMatrix *  uMvMatrix * vec4(aPos, 1.0);\n          float drawSize = 0.0;\n          float dist = distance(vec3(0.0, 0.0, 0.0),aPos.xyz);\n\n          // Satellite\n          drawSize +=\n            when_lt(aStar, 0.5) *\n            (min(max(pow(${settingsManager.satShader.distanceBeforeGrow} / position.z, 2.1), minSize * 0.9), maxSize) * 1.0);\n\n          // Something on the ground\n          drawSize +=\n            when_ge(aStar, 0.5) * when_lt(dist, 6421.0) *\n            (min(max(pow(${settingsManager.satShader.distanceBeforeGrow} / position.z, 2.1), minSize * 0.75), maxSize) * 1.0);\n\n          // Star or Searched Object\n          drawSize +=\n            when_ge(aStar, 0.5) * when_ge(dist, 6421.0) *\n            (min(max(${settingsManager.satShader.starSize} * 100000.0 / dist, ${settingsManager.satShader.starSize}),${settingsManager.satShader.starSize} * 1.0));\n\n          gl_PointSize = drawSize;\n          gl_Position = position;\n          vColor = aColor;\n          vStar = aStar * 1.0;\n          vDist = dist;\n        }\n      `},{name:"pick-fragment.glsl",code:"precision mediump float;\n\nvarying vec3 vColor;\n\nvoid main(void) {\n  gl_FragColor = vec4(vColor, 1.0);\n}"},{name:"pick-vertex.glsl",code:"attribute vec3 aPos;\nattribute vec3 aColor;\nattribute float aPickable;\n\nuniform mat4 uCamMatrix;\nuniform mat4 uMvMatrix;\nuniform mat4 uPMatrix;\n\nvarying vec3 vColor;\n\nvoid main(void) {\n  float dotSize = 16.0;\n  vec4 position = uPMatrix * uCamMatrix *  uMvMatrix * vec4(aPos, 1.0);\n  gl_Position = position;\n  gl_PointSize = dotSize * aPickable;\n  vColor = aColor * aPickable;\n}"},{name:"path-fragment.glsl",code:"precision mediump float;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n}"},{name:"path-vertex.glsl",code:"attribute vec3 aPos;\n\nuniform mat4 uCamMatrix;\nuniform mat4 uMvMatrix;\nuniform mat4 uPMatrix;\nuniform vec4 uColor;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec4 position = uPMatrix * uCamMatrix *  uMvMatrix * vec4(aPos, 1.0);\n  gl_Position = position;\n  vColor = uColor;\n}\n"}],t.shaderDataLen=t.shaderData.length;var e=0;t.getShaderCode=function(a){for(e=0;e<t.shaderDataLen;e++)if(t.shaderData[e].name===a)return t.shaderData[e].code;return null},window.shaderLoader=t}();
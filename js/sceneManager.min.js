!function(){let t=mat4.create(),a=mat3.create(),e={};function r(t,a,e,r,i,n){var o={};o.latitude=r,o.longitude=i,o.height=n;var l,g,u,s=satellite.geodeticToEcf(o);l=s.x,g=s.y,u=s.z;var m=Math.sin(r),M=Math.sin(i),c=Math.cos(r),v=Math.cos(i);x%=360;var x=DEG2RAD*t,R=DEG2RAD*a,f=-e*Math.cos(R)*Math.cos(x),E=e*Math.cos(R)*Math.sin(x),A=e*Math.sin(R);return{x:m*v*f+-M*E+c*v*A+l,y:m*M*f+v*E+c*M*A+g,z:-c*f+m*A+u}}!function(){var t,a,r,i,n,o,l,g,u,s,m,M={},c=!1,v=!1,x=mat4.create(),R=mat3.create();M.earthJ=0,M.earthEra=0,M.timeTextStr="",M.timeTextStrEmpty="",M.lightDirection=[],M.propRateDOM=$("#propRate-status-box"),M.pos=[0,0,0];var f=!1,E=!1;function A(){f&&E&&M.bumpMap.isReady&&M.specularMap.isReady&&(!0,M.loaded=!0)}M.loaded=!1,M.isDayNightToggle=!1,M.init=function(){let o=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(o,e.shaders.earth.frag),gl.compileShader(o);let l=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(l,e.shaders.earth.vert),gl.compileShader(l),u=gl.createProgram(),gl.attachShader(u,l),gl.attachShader(u,o),gl.linkProgram(u),u.aVertexPosition=gl.getAttribLocation(u,"aVertexPosition"),u.aTexCoord=gl.getAttribLocation(u,"aTexCoord"),u.aVertexNormal=gl.getAttribLocation(u,"aVertexNormal"),u.uPMatrix=gl.getUniformLocation(u,"uPMatrix"),u.uCamMatrix=gl.getUniformLocation(u,"uCamMatrix"),u.uMvMatrix=gl.getUniformLocation(u,"uMvMatrix"),u.uNormalMatrix=gl.getUniformLocation(u,"uNormalMatrix"),u.uLightDirection=gl.getUniformLocation(u,"uLightDirection"),u.uAmbientLightColor=gl.getUniformLocation(u,"uAmbientLightColor"),u.uDirectionalLightColor=gl.getUniformLocation(u,"uDirectionalLightColor"),u.uSampler=gl.getUniformLocation(u,"uSampler"),u.uNightSampler=gl.getUniformLocation(u,"uNightSampler"),u.uBumpMap=gl.getUniformLocation(u,"uBumpMap"),u.uSpecMap=gl.getUniformLocation(u,"uSpecMap"),s=gl.createTexture();var g=new Image,c=new Image;g.onload=function(){$("#loader-text").text("Painting the Earth..."),gl.bindTexture(gl.TEXTURE_2D,s),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,g),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),f=!0,A()},settingsManager.smallImages&&(g.src=settingsManager.installDirectory+"textures/earthmap512.jpg"),settingsManager.nasaImages&&(g.src=settingsManager.installDirectory+"textures/mercator-tex.jpg"),settingsManager.trusatImages&&(g.src=settingsManager.installDirectory+"textures/trusatvector-4096.jpg"),settingsManager.blueImages&&(g.src=settingsManager.installDirectory+"textures/world_blue-2048.png"),settingsManager.lowresImages&&(g.src=settingsManager.installDirectory+"textures/earthmap4k.jpg"),settingsManager.vectorImages&&(g.src=settingsManager.installDirectory+"textures/dayearthvector-4096.jpg"),settingsManager.hiresImages||settingsManager.hiresNoCloudsImages?(settingsManager.hiresImages&&(c.src=settingsManager.installDirectory+"textures/earthmap8k.jpg"),settingsManager.hiresNoCloudsImages&&(c.src=settingsManager.installDirectory+"textures/earthmap8k.jpg"),c.onload=function(){gl.bindTexture(gl.TEXTURE_2D,s),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,c),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),f=!0,A()}):c=null,m=gl.createTexture();var v=new Image,x=new Image;v.onload=function(){gl.bindTexture(gl.TEXTURE_2D,m),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,v),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),E=!0,A()},v.src=settingsManager.installDirectory+"textures/earthlights4k.jpg",settingsManager.smallImages&&(v.src=settingsManager.installDirectory+"textures/earthlights512.jpg"),settingsManager.vectorImages&&(v.src=settingsManager.installDirectory+"textures/dayearthvector-4096.jpg"),settingsManager.hiresImages||settingsManager.hiresNoCloudsImages?(x.src=settingsManager.installDirectory+"textures/earthlights10k.jpg",x.onload=function(){gl.bindTexture(gl.TEXTURE_2D,m),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,x),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),E=!0,A()}):x=null,M.bumpMap={},M.bumpMap.isReady=!1,M.bumpMap.texture=gl.createTexture(),M.bumpMap.img=new Image,M.bumpMap.img.onload=function(){gl.bindTexture(gl.TEXTURE_2D,M.bumpMap.texture),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,M.bumpMap.img),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),M.bumpMap.isReady=!0,A()},M.bumpMap.img.src=settingsManager.installDirectory+"textures/earthbump8k.jpg",settingsManager.smallImages&&(M.bumpMap.img.src=settingsManager.installDirectory+"textures/earthbump256.jpg"),M.specularMap={},M.specularMap.isReady=!1,M.specularMap.texture=gl.createTexture(),M.specularMap.img=new Image,M.specularMap.img.onload=function(){gl.bindTexture(gl.TEXTURE_2D,M.specularMap.texture),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,M.specularMap.img),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),M.specularMap.isReady=!0,A()},M.specularMap.img.src=settingsManager.installDirectory+"textures/earthspec8k.jpg",settingsManager.smallImages&&(M.specularMap.img.src=settingsManager.installDirectory+"textures/earthspec256.jpg");var R=[],T=[],h=[];for(let t=0;t<=64;t++){var p=Math.PI/64*t-Math.PI/2,d=Math.cos(Math.abs(p)),D=Math.sin(p);for(let a=0;a<=64;a++){var _=2*Math.PI/64*a,S=Math.cos(_)*d,b=Math.sin(_)*d,U=1-t/64,C=.5+a/64;R.push(S*RADIUS_OF_EARTH),R.push(b*RADIUS_OF_EARTH),R.push(D*RADIUS_OF_EARTH),h.push(C),h.push(U),T.push(S),T.push(b),T.push(D)}}var N=[];for(let t=0;t<64;t++)for(let a=0;a<64;a++){var P=65*t+a,F=P+1,L=65*(t+1)+a,I=L+1;N.push(P),N.push(F),N.push(L),N.push(L),N.push(I),N.push(F)}n=N.length,t=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,t),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(R),gl.STATIC_DRAW),a=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,a),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(T),gl.STATIC_DRAW),r=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,r),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(h),gl.STATIC_DRAW),i=gl.createBuffer(),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,i),gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(N),gl.STATIC_DRAW),M.loaded=!0},M.update=(()=>{if(M.lastTime=o,o=timeManager.propTime(),timeManager.selectedDate=o,M.lastTime-o<300){for(M.tDS=o.toJSON(),M.timeTextStr=M.timeTextStrEmpty,M.iText=11;M.iText<20;M.iText++)M.iText>11&&(M.timeTextStr+=M.tDS[M.iText-1]);settingsManager.isPropRateChange&&!settingsManager.isAlwaysHidePropRate&&(timeManager.propRate>1.01||timeManager.propRate<.99?(timeManager.propRate<10&&M.propRateDOM.html("Propagation Speed: "+timeManager.propRate.toFixed(1)+"x"),timeManager.propRate>=10&&M.propRateDOM.html("Propagation Speed: "+timeManager.propRate.toFixed(2)+"x"),M.propRateDOM.show(),v=!0):v&&(M.propRateDOM.hide(),v=!1),settingsManager.isPropRateChange=!1),settingsManager.disableUI||(c?document.getElementById("datetime-text").childNodes[0].nodeValue=`${M.timeTextStr}`:(document.getElementById("datetime-text").innerText=`${M.timeTextStr}`,c=!0))}!settingsManager.isEditTime&&settingsManager.cruncherReady||$("#datetime-input-tb").val(timeManager.selectedDate.toISOString().slice(0,10)+" "+timeManager.selectedDate.toISOString().slice(11,19)),M.earthJ=timeManager.jday(o.getUTCFullYear(),o.getUTCMonth()+1,o.getUTCDate(),o.getUTCHours(),o.getUTCMinutes(),o.getUTCSeconds()),M.earthJ+=o.getUTCMilliseconds()*MILLISECONDS_PER_DAY,M.earthEra=satellite.gstime(M.earthJ),sun.currentDirection(),vec3.normalize(M.lightDirection,M.lightDirection),l=x,mat4.identity(l),mat4.rotateZ(l,l,M.earthEra),mat4.translate(l,l,M.pos),g=R,mat3.normalFromMat4(g,l)}),M.draw=function(e,o){if(M.loaded)return gl.useProgram(u),gl.bindFramebuffer(gl.FRAMEBUFFER,null),gl.uniformMatrix3fv(u.uNormalMatrix,!1,g),gl.uniformMatrix4fv(u.uMvMatrix,!1,l),gl.uniformMatrix4fv(u.uPMatrix,!1,e),gl.uniformMatrix4fv(u.uCamMatrix,!1,o),gl.uniform3fv(u.uLightDirection,M.lightDirection),gl.uniform3fv(u.uAmbientLightColor,[.1,.1,.1]),gl.uniform3fv(u.uDirectionalLightColor,[1,1,1]),gl.uniform1i(u.uSampler,0),gl.activeTexture(gl.TEXTURE0),gl.bindTexture(gl.TEXTURE_2D,s),gl.uniform1i(u.uNightSampler,1),gl.activeTexture(gl.TEXTURE1),M.isDayNightToggle?gl.bindTexture(gl.TEXTURE_2D,s):gl.bindTexture(gl.TEXTURE_2D,m),gl.uniform1i(u.uBumpMap,2),gl.activeTexture(gl.TEXTURE2),gl.bindTexture(gl.TEXTURE_2D,M.bumpMap.texture),gl.uniform1i(u.uSpecMap,3),gl.activeTexture(gl.TEXTURE3),gl.bindTexture(gl.TEXTURE_2D,M.specularMap.texture),gl.bindBuffer(gl.ARRAY_BUFFER,r),gl.enableVertexAttribArray(u.aTexCoord),gl.vertexAttribPointer(u.aTexCoord,2,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,t),gl.enableVertexAttribArray(u.aVertexPosition),gl.vertexAttribPointer(u.aVertexPosition,3,gl.FLOAT,!1,0,0),gl.vertexAttribPointer(gl.pickShaderProgram.aPos,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,a),gl.enableVertexAttribArray(u.aVertexNormal),gl.vertexAttribPointer(u.aVertexNormal,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,i),gl.drawElements(gl.TRIANGLES,n,gl.UNSIGNED_SHORT,0),gl.disableVertexAttribArray(u.aTexCoord),gl.disableVertexAttribArray(u.aVertexPosition),gl.disableVertexAttribArray(u.aVertexNormal),gl.useProgram(gl.pickShaderProgram),gl.bindFramebuffer(gl.FRAMEBUFFER,gl.pickFb),gl.uniformMatrix4fv(gl.pickShaderProgram.uMvMatrix,!1,l),gl.disableVertexAttribArray(gl.pickShaderProgram.aColor),gl.enableVertexAttribArray(gl.pickShaderProgram.aPos),gl.drawElements(gl.TRIANGLES,n,gl.UNSIGNED_SHORT,0),!0},window.earth=M}(),function(){var r={};let i,n,o,l;r.latSegs=64,r.lonSegs=64,r.lightDirection=[],r.init=function(){let t=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(t,e.shaders.atmosphere.frag),gl.compileShader(t);let a=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(a,e.shaders.atmosphere.vert),gl.compileShader(a),l=gl.createProgram(),gl.attachShader(l,a),gl.attachShader(l,t),gl.linkProgram(l),l.aVertexPosition=gl.getAttribLocation(l,"aVertexPosition"),l.aVertexNormal=gl.getAttribLocation(l,"aVertexNormal"),l.uPMatrix=gl.getUniformLocation(l,"uPMatrix"),l.uCamMatrix=gl.getUniformLocation(l,"uCamMatrix"),l.uMvMatrix=gl.getUniformLocation(l,"uMvMatrix"),l.uNormalMatrix=gl.getUniformLocation(l,"uNormalMatrix"),l.uLightDirection=gl.getUniformLocation(l,"uLightDirection");let g=[],u=[];for(let t=0;t<=r.latSegs;t++){let a=Math.PI/r.latSegs*t-Math.PI/2,e=Math.cos(Math.abs(a)),i=Math.sin(a);for(let t=0;t<=r.lonSegs;t++){let a=2*Math.PI/r.lonSegs*t,n=Math.cos(a)*e,o=Math.sin(a)*e;g.push(n*settingsManager.atmosphereSize),g.push(o*settingsManager.atmosphereSize),g.push(i*settingsManager.atmosphereSize),u.push(n),u.push(o),u.push(i)}}let s=[];for(let t=0;t<r.latSegs;t++)for(let a=0;a<r.lonSegs;a++){var m=t*(r.lonSegs+1)+a,M=m+1,c=(t+1)*(r.lonSegs+1)+a,v=c+1;s.push(m),s.push(M),s.push(c),s.push(c),s.push(v),s.push(M)}r.vertCount=s.length,i=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,i),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(g),gl.STATIC_DRAW),n=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,n),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(u),gl.STATIC_DRAW),o=gl.createBuffer(),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,o),gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(s),gl.STATIC_DRAW),r.loaded=!0},r.update=(()=>{r.mvMatrix=t,mat4.identity(r.mvMatrix),mat4.rotateY(r.mvMatrix,r.mvMatrix,90*DEG2RAD-camPitch),mat4.translate(r.mvMatrix,r.mvMatrix,[0,0,0]),r.nMatrix=a,mat3.normalFromMat4(r.nMatrix,r.mvMatrix)}),r.draw=function(t,a){if(r.loaded)return gl.enable(gl.BLEND),gl.disable(gl.DEPTH_TEST),gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA),gl.useProgram(l),gl.bindFramebuffer(gl.FRAMEBUFFER,null),gl.uniformMatrix3fv(l.uNormalMatrix,!1,r.nMatrix),gl.uniformMatrix4fv(l.uMvMatrix,!1,r.mvMatrix),gl.uniformMatrix4fv(l.uPMatrix,!1,t),gl.uniformMatrix4fv(l.uCamMatrix,!1,a),gl.uniform3fv(l.uLightDirection,earth.lightDirection),gl.bindBuffer(gl.ARRAY_BUFFER,i),gl.enableVertexAttribArray(l.aVertexPosition),gl.vertexAttribPointer(l.aVertexPosition,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,n),gl.enableVertexAttribArray(l.aVertexNormal),gl.vertexAttribPointer(l.aVertexNormal,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,o),gl.drawElements(gl.TRIANGLES,r.vertCount,gl.UNSIGNED_SHORT,0),gl.disableVertexAttribArray(l.aVertexPosition),gl.disableVertexAttribArray(l.aVertexNormal),gl.disable(gl.BLEND),gl.enable(gl.DEPTH_TEST),!0},window.atmosphere=r}(),function(){var i={};i.sunvar={},i.currentDirection=function(){return i.sunvar.now=timeManager.propTime(),i.sunvar.j=timeManager.jday(i.sunvar.now.getUTCFullYear(),i.sunvar.now.getUTCMonth()+1,i.sunvar.now.getUTCDate(),i.sunvar.now.getUTCHours(),i.sunvar.now.getUTCMinutes(),i.sunvar.now.getUTCSeconds()),i.sunvar.j+=i.sunvar.now.getUTCMilliseconds()*MILLISECONDS_PER_DAY,i.getDirection(i.sunvar.j)},i.getDirection=function(t){i.sunvar.n=t-2451545,i.sunvar.L=280.46+.9856474*i.sunvar.n,i.sunvar.g=357.528+.9856003*i.sunvar.n,i.sunvar.L=i.sunvar.L%360,i.sunvar.g=i.sunvar.g%360,i.sunvar.ecLon=i.sunvar.L+1.915*Math.sin(i.sunvar.g*DEG2RAD)+.02*Math.sin(2*i.sunvar.g*DEG2RAD),i.sunvar.ob=function(t){return i.sunvar.t=(t-2451545)/3652500,i.sunvar.obliq=84381.448-4680.93*i.sunvar.t-1.55*Math.pow(i.sunvar.t,2)+1999.25*Math.pow(i.sunvar.t,3)-51.38*Math.pow(i.sunvar.t,4)-249.67*Math.pow(i.sunvar.t,5)-39.05*Math.pow(i.sunvar.t,6)+7.12*Math.pow(i.sunvar.t,7)+27.87*Math.pow(i.sunvar.t,8)+5.79*Math.pow(i.sunvar.t,9)+2.45*Math.pow(i.sunvar.t,10),i.sunvar.obliq/3600}(t),earth.lightDirection[0]=Math.cos(i.sunvar.ecLon*DEG2RAD),earth.lightDirection[1]=Math.cos(i.sunvar.ob*DEG2RAD)*Math.sin(i.sunvar.ecLon*DEG2RAD),earth.lightDirection[2]=Math.sin(i.sunvar.ob*DEG2RAD)*Math.sin(i.sunvar.ecLon*DEG2RAD)},i.getXYZ=function(){var t=timeManager.propTime();j=timeManager.jday(t.getUTCFullYear(),t.getUTCMonth()+1,t.getUTCDate(),t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds()),j+=t.getUTCMilliseconds()*MILLISECONDS_PER_DAY;var a=satellite.gstime(j),e=new A.JulianDay(j),n=A.EclCoord.fromWgs84(0,0,0),o=A.Solar.topocentricPosition(e,n,!1);azimuth=o.hz.az*RAD2DEG+180,elevation=o.hz.alt*RAD2DEG%360;var l=new A.JulianDay(A.JulianDay.dateToJD(timeManager.propTime())).jdJ2000Century();return i.sunvar.g=180*A.Solar.meanAnomaly(l)/Math.PI,i.sunvar.g=i.sunvar.g%360,i.sunvar.R=1.00014-.01671*Math.cos(i.sunvar.g)-14e-5*Math.cos(2*i.sunvar.g),range=149597870700*i.sunvar.R/1e3,i.eci=satellite.ecfToEci(r(azimuth,elevation,range,0,0,0),a),{x:i.eci.x,y:i.eci.y,z:i.eci.z}};let n,o,l,g,u,s,m;i.pos=[0,0,0];i.init=function(){let t=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(t,e.shaders.sun.frag),gl.compileShader(t);let a=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(a,e.shaders.sun.vert),gl.compileShader(a),m=gl.createProgram(),gl.attachShader(m,a),gl.attachShader(m,t),gl.linkProgram(m),m.aVertexPosition=gl.getAttribLocation(m,"aVertexPosition"),m.aTexCoord=gl.getAttribLocation(m,"aTexCoord"),m.aVertexNormal=gl.getAttribLocation(m,"aVertexNormal"),m.uPMatrix=gl.getUniformLocation(m,"uPMatrix"),m.uCamMatrix=gl.getUniformLocation(m,"uCamMatrix"),m.uMvMatrix=gl.getUniformLocation(m,"uMvMatrix"),m.uNormalMatrix=gl.getUniformLocation(m,"uNormalMatrix");var r=[],u=[],s=[];for(let t=0;t<=64;t++){var M=Math.PI/64*t-Math.PI/2,c=Math.cos(Math.abs(M)),v=Math.sin(M);for(let a=0;a<=64;a++){var x=2*Math.PI/64*a,R=Math.cos(x)*c,f=Math.sin(x)*c,E=1-t/64,A=.5+a/64;r.push(R*RADIUS_OF_DRAW_SUN),r.push(f*RADIUS_OF_DRAW_SUN),r.push(v*RADIUS_OF_DRAW_SUN),s.push(A),s.push(E),u.push(R),u.push(f),u.push(v)}}var T=[];for(let t=0;t<64;t++)for(let a=0;a<64;a++){var h=65*t+a,p=h+1,d=65*(t+1)+a,D=d+1;T.push(h),T.push(p),T.push(d),T.push(d),T.push(D),T.push(p)}g=T.length,n=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,n),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(r),gl.STATIC_DRAW),o=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,o),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(u),gl.STATIC_DRAW),l=gl.createBuffer(),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,l),gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(T),gl.STATIC_DRAW),i.loaded=!0},i.draw=function(e,r){if(!i.loaded)return;i.realXyz=i.getXYZ();let M=Math.max(Math.max(Math.abs(i.realXyz.x),Math.abs(i.realXyz.y)),Math.abs(i.realXyz.z));return i.pos[0]=i.realXyz.x/M*SUN_SCALAR_DISTANCE,i.pos[1]=i.realXyz.y/M*SUN_SCALAR_DISTANCE,i.pos[2]=i.realXyz.z/M*SUN_SCALAR_DISTANCE,u=t,mat4.identity(u),mat4.translate(u,u,i.pos),mat4.rotateX(u,u,-camPitch),mat4.rotateZ(u,u,-camYaw),s=a,mat3.normalFromMat4(s,u),gl.enable(gl.BLEND),gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA),gl.useProgram(m),gl.bindFramebuffer(gl.FRAMEBUFFER,null),gl.uniformMatrix3fv(m.uNormalMatrix,!1,s),gl.uniformMatrix4fv(m.uMvMatrix,!1,u),gl.uniformMatrix4fv(m.uPMatrix,!1,e),gl.uniformMatrix4fv(m.uCamMatrix,!1,r),gl.bindBuffer(gl.ARRAY_BUFFER,n),gl.enableVertexAttribArray(m.aVertexPosition),gl.vertexAttribPointer(m.aVertexPosition,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,o),gl.enableVertexAttribArray(m.aVertexNormal),gl.vertexAttribPointer(m.aVertexNormal,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,l),gl.drawElements(gl.TRIANGLES,g,gl.UNSIGNED_SHORT,0),!0},window.sun=i}(),function(){let i,n,o,l,g,u,s;var m;moon={},moon.pos=[0,0,0];moon.getXYZ=(()=>{var t=timeManager.propTime();j=timeManager.jday(t.getUTCFullYear(),t.getUTCMonth()+1,t.getUTCDate(),t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds()),j+=t.getUTCMilliseconds()*MILLISECONDS_PER_DAY;var a=satellite.gstime(j);let e=SunCalc.getMoonPosition(timeManager.propTime(),0,0);return moon.position=satellite.ecfToEci(r(e.azimuth*RAD2DEG,e.altitude*RAD2DEG,e.distance,0,0,0),a),{x:moon.position.x,y:moon.position.y,z:moon.position.z}}),moon.init=function(){let t=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(t,e.shaders.moon.frag),gl.compileShader(t);let a=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(a,e.shaders.moon.vert),gl.compileShader(a),s=gl.createProgram(),gl.attachShader(s,a),gl.attachShader(s,t),gl.linkProgram(s),s.aVertexPosition=gl.getAttribLocation(s,"aVertexPosition"),s.aTexCoord=gl.getAttribLocation(s,"aTexCoord"),s.aVertexNormal=gl.getAttribLocation(s,"aVertexNormal"),s.uPMatrix=gl.getUniformLocation(s,"uPMatrix"),s.uCamMatrix=gl.getUniformLocation(s,"uCamMatrix"),s.uMvMatrix=gl.getUniformLocation(s,"uMvMatrix"),s.uNormalMatrix=gl.getUniformLocation(s,"uNormalMatrix"),s.uSunPos=gl.getUniformLocation(s,"uSunPos"),s.uSampler=gl.getUniformLocation(s,"uSampler"),m=gl.createTexture();var r=new Image;r.onload=function(){gl.bindTexture(gl.TEXTURE_2D,m),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,r),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT);let t=moon.getXYZ(),a=Math.max(Math.max(Math.abs(t.x),Math.abs(t.y)),Math.abs(t.z));moon.pos[0]=t.x/a*MOON_SCALAR_DISTANCE,moon.pos[1]=t.y/a*MOON_SCALAR_DISTANCE,moon.pos[2]=t.z/a*MOON_SCALAR_DISTANCE,!0&&(moon.loaded=!0)},r.src=settingsManager.installDirectory+"textures/moonmap256.jpg";var g=[],u=[],M=[];for(let t=0;t<=32;t++){var c=Math.PI/32*t-Math.PI/2,v=Math.cos(Math.abs(c)),x=Math.sin(c);for(let a=0;a<=32;a++){var R=2*Math.PI/32*a,f=Math.cos(R)*v,E=Math.sin(R)*v,A=1-t/32,T=.5+a/32;g.push(f*RADIUS_OF_DRAW_MOON),g.push(E*RADIUS_OF_DRAW_MOON),g.push(x*RADIUS_OF_DRAW_MOON),M.push(T),M.push(A),u.push(f),u.push(E),u.push(x)}}var h=[];for(let t=0;t<32;t++)for(let a=0;a<32;a++){var p=33*t+a,d=p+1,D=33*(t+1)+a,_=D+1;h.push(p),h.push(d),h.push(D),h.push(D),h.push(_),h.push(d)}l=h.length,i=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,i),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(g),gl.STATIC_DRAW),n=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,n),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(u),gl.STATIC_DRAW),texCoordBuf=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,texCoordBuf),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(M),gl.STATIC_DRAW),o=gl.createBuffer(),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,o),gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(h),gl.STATIC_DRAW)},moon.draw=function(e,r){if(!moon.loaded)return;let M=moon.getXYZ(),c=Math.max(Math.max(Math.abs(M.x),Math.abs(M.y)),Math.abs(M.z));return moon.pos[0]=M.x/c*MOON_SCALAR_DISTANCE,moon.pos[1]=M.y/c*MOON_SCALAR_DISTANCE,moon.pos[2]=M.z/c*MOON_SCALAR_DISTANCE,g=t,mat4.identity(g),mat4.translate(g,g,moon.pos),u=a,mat3.normalFromMat4(u,g),gl.useProgram(s),gl.bindFramebuffer(gl.FRAMEBUFFER,null),gl.uniformMatrix3fv(s.uNormalMatrix,!1,u),gl.uniformMatrix4fv(s.uMvMatrix,!1,g),gl.uniformMatrix4fv(s.uPMatrix,!1,e),gl.uniformMatrix4fv(s.uCamMatrix,!1,r),gl.uniform3fv(s.uSunPos,sun.pos),gl.uniform1i(s.uSampler,0),gl.activeTexture(gl.TEXTURE0),gl.bindTexture(gl.TEXTURE_2D,m),gl.bindBuffer(gl.ARRAY_BUFFER,texCoordBuf),gl.enableVertexAttribArray(s.aTexCoord),gl.vertexAttribPointer(s.aTexCoord,2,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,i),gl.enableVertexAttribArray(s.aVertexPosition),gl.vertexAttribPointer(s.aVertexPosition,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,n),gl.enableVertexAttribArray(s.aVertexNormal),gl.vertexAttribPointer(s.aVertexNormal,3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,o),gl.drawElements(gl.TRIANGLES,l,gl.UNSIGNED_SHORT,0),gl.disableVertexAttribArray(s.aTexCoord),gl.disableVertexAttribArray(s.aVertexPosition),gl.disableVertexAttribArray(s.aVertexNormal),!0},window.moon=moon}(),e.shaders={earth:{frag:"\n        precision mediump float;\n\n        uniform vec3 uAmbientLightColor;\n        uniform vec3 uDirectionalLightColor;\n        uniform vec3 uLightDirection;\n\n        varying vec2 vUv;\n        varying vec3 vNormal;\n\n        uniform sampler2D uSampler;\n        uniform sampler2D uNightSampler;\n        uniform sampler2D uBumpMap;\n        uniform sampler2D uSpecMap;\n\n        void main(void) {\n          // float shininess = 1.0;\n          // float diffuse = pow(max(dot(vNormal, uLightDirection), 0.0),shininess);\n          // float diffuseLight = 0.7;\n          float diffuse = max(dot(vNormal, uLightDirection), 0.0);\n          vec3 bumpTexColor = texture2D(uBumpMap, vUv).rgb * diffuse * 0.4;\n          vec3 specLightColor = texture2D(uSpecMap, vUv).rgb * diffuse * 0.1;\n\n          vec3 dayColor = uAmbientLightColor + (uDirectionalLightColor * diffuse);\n          vec3 dayTexColor = texture2D(uSampler, vUv).rgb * dayColor;\n          vec3 nightColor = texture2D(uNightSampler, vUv).rgb * pow(1.0 - diffuse, 2.0);\n\n          gl_FragColor = vec4(dayTexColor + nightColor + bumpTexColor + specLightColor, 1.0);\n        }\n        ",vert:"\n        attribute vec3 aVertexPosition;\n\n        attribute vec2 aTexCoord;\n        attribute vec3 aVertexNormal;\n        uniform mat4 uPMatrix;\n        uniform mat4 uCamMatrix;\n        uniform mat4 uMvMatrix;\n        uniform mat3 uNormalMatrix;\n\n        varying vec2 vUv;\n        varying vec3 vNormal;\n\n        void main(void) {\n          gl_Position = uPMatrix * uCamMatrix * uMvMatrix * vec4(aVertexPosition, 1.0);\n          vUv = aTexCoord;\n\n          vNormal = uNormalMatrix * aVertexNormal;\n        }\n        "},sun:{frag:"\n        precision mediump float;\n\n        varying vec3 vNormal;\n        varying float vDist;\n\n        void main(void) {\n          float a = pow(vDist / 2.0 * -1.0 + 1.1, 10.0);\n          float r = 1.0 * a;\n          float g = 1.0 * a;\n          float b = 0.4 * a;\n          gl_FragColor = vec4(vec3(r,g,b), a);\n        }\n      ",vert:`\n        attribute vec3 aVertexPosition;\n        attribute vec3 aVertexNormal;\n\n        uniform mat4 uPMatrix;\n        uniform mat4 uCamMatrix;\n        uniform mat4 uMvMatrix;\n        uniform mat3 uNormalMatrix;\n\n        varying vec3 vNormal;\n        varying float vDist;\n\n        void main(void) {\n          vec4 position1 = uCamMatrix * uMvMatrix * vec4(aVertexPosition, 1.0);\n          vec4 position0 = uCamMatrix * uMvMatrix * vec4(vec3(0.0,0.0,0.0), 1.0);\n          gl_Position = uPMatrix * position1;\n          vDist = distance(position0.xz,position1.xz) / ${RADIUS_OF_DRAW_SUN}.0;\n          vNormal = uNormalMatrix * aVertexNormal;\n        }`},moon:{frag:"\n        precision mediump float;\n\n        uniform vec3 uLightDirection;\n        varying vec2 vUv;\n        varying vec3 vNormal;\n\n        uniform sampler2D uSampler;\n        uniform vec3 uSunPos;\n\n        void main(void) {\n          // Moon Position - Sun Position\n          vec3 LightDirection = uSunPos - vec3(0.0,0.0,0.0);\n          LightDirection = normalize(LightDirection);\n\n          float diffuse = max(dot(vNormal, LightDirection), 0.0);\n          vec3 ambientLight = vec3(0.05,0.05,0.05);\n\n          // float diffuseLight = 0.7;\n          vec3 litTexColor = texture2D(uSampler, vUv).rgb * (ambientLight + diffuse * 1.5);\n          gl_FragColor = vec4(litTexColor, 1.0);\n        }\n      ",vert:"\n        attribute vec3 aVertexPosition;\n\n        attribute vec2 aTexCoord;\n        attribute vec3 aVertexNormal;\n\n        uniform mat4 uPMatrix;\n        uniform mat4 uCamMatrix;\n        uniform mat4 uMvMatrix;\n        uniform mat3 uNormalMatrix;\n\n        varying vec2 vUv;\n        varying vec3 vNormal;\n        void main(void) {\n          gl_Position = uPMatrix * uCamMatrix * uMvMatrix * vec4(aVertexPosition, 1.0);\n          vUv = aTexCoord;\n\n          vNormal = uNormalMatrix * aVertexNormal;\n        }\n      "},atmosphere:{frag:"\n        precision mediump float;\n\n        uniform vec3 uLightDirection;\n        varying vec3 vNormal;\n        varying float vDist;\n\n        void main () {\n          float sunAmount = max(dot(vNormal, uLightDirection), 0.1);\n          float darkAmount = max(dot(vNormal, -uLightDirection), 0.0);\n          float a4 = pow(1.1 - vDist / 2.0, 1.1) * 2.0;\n          float r = 1.0 - sunAmount;\n          float g = max(1.0 - sunAmount, 0.8) - darkAmount;\n          float b = max(sunAmount, 0.8) - darkAmount;\n          float a1 = min(sunAmount, 0.8) * 2.0;\n          float a2 = min(pow(darkAmount / 1.15, 2.0),0.2);\n          float a3 = pow(vDist,2.0) * -1.0 + 1.0;\n          float a = min(a1 - a2, a3) * a4;\n          gl_FragColor    = vec4(vec3(r,g,b), a);\n        }\n      ",vert:`\n        attribute vec3 aVertexPosition;\n        attribute vec3 aVertexNormal;\n\n        uniform mat4 uPMatrix;\n        uniform mat4 uCamMatrix;\n        uniform mat4 uMvMatrix;\n        uniform mat3 uNormalMatrix;\n\n        varying vec3 vNormal;\n        varying float vDist;\n\n        void main(void) {\n          vec4 position1 = uCamMatrix * uMvMatrix * vec4(aVertexPosition, 1.0);\n          vec4 position0 = uCamMatrix * uMvMatrix * vec4(vec3(0.0,0.0,0.0), 1.0);\n          gl_Position = uPMatrix * position1;\n          vDist = distance(position0.xz,position1.xz) / ${settingsManager.atmosphereSize}.0;\n          vNormal = normalize( uNormalMatrix * aVertexNormal );\n        }\n      `}},window.sceneManager=e}(),function(){var t={};t.shaderData=[{name:"dot-fragment.glsl",code:`\n      precision mediump float;\n\n      varying vec4 vColor;\n      varying float vStar;\n\n      void main(void) {\n        vec2 ptCoord = gl_PointCoord * 2.0 - vec2(1.0, 1.0);\n        float r = 0.0;\n        float alpha = 0.0;\n        if (vStar < 0.5) {\n          r = ${settingsManager.satShader.blurFactor1} - min(abs(length(ptCoord)), 1.0);\n          alpha = pow(2.0 * r + ${settingsManager.satShader.blurFactor2}, 3.0);\n        } else {\n          r = ${settingsManager.satShader.blurFactor3} - min(abs(length(ptCoord)), 1.0);\n          alpha = pow(2.0 * r + ${settingsManager.satShader.blurFactor4}, 3.0);\n        }\n        alpha = min(alpha, 1.0);\n        gl_FragColor = vec4(vColor.rgb, vColor.a * alpha);\n      }\n    `},{name:"dot-vertex-var.glsl",code:`\n        attribute vec3 aPos;\n        attribute vec4 aColor;\n        attribute float aStar;\n\n        uniform float minSize;\n        uniform float maxSize;\n\n        uniform mat4 uCamMatrix;\n        uniform mat4 uMvMatrix;\n        uniform mat4 uPMatrix;\n\n        varying vec4 vColor;\n        varying float vStar;\n\n        void main(void) {\n          vec4 position = uPMatrix * uCamMatrix *  uMvMatrix * vec4(aPos, 1.0);\n          float drawSize = ${settingsManager.satShader.starSize};\n          if (aStar < 0.5) {\n            drawSize = min(max(pow(${settingsManager.satShader.distanceBeforeGrow} / position.z, 2.1), minSize), maxSize) * 1.0;\n          }\n          gl_PointSize = drawSize;\n          gl_Position = position;\n          vColor = aColor;\n          vStar = aStar * 1.0;\n        }\n      `},{name:"pick-fragment.glsl",code:"precision mediump float;\n\nvarying vec3 vColor;\n\nvoid main(void) {\n  gl_FragColor = vec4(vColor, 1.0);\n}"},{name:"pick-vertex.glsl",code:"attribute vec3 aPos;\nattribute vec3 aColor;\nattribute float aPickable;\n\nuniform mat4 uCamMatrix;\nuniform mat4 uMvMatrix;\nuniform mat4 uPMatrix;\n\nvarying vec3 vColor;\n\nvoid main(void) {\n  float dotSize = 16.0;\n  vec4 position = uPMatrix * uCamMatrix *  uMvMatrix * vec4(aPos, 1.0);\n  gl_Position = position;\n  gl_PointSize = dotSize * aPickable;\n  vColor = aColor * aPickable;\n}"},{name:"path-fragment.glsl",code:"precision mediump float;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n}"},{name:"path-vertex.glsl",code:"attribute vec3 aPos;\n\nuniform mat4 uCamMatrix;\nuniform mat4 uMvMatrix;\nuniform mat4 uPMatrix;\nuniform vec4 uColor;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec4 position = uPMatrix * uCamMatrix *  uMvMatrix * vec4(aPos, 1.0);\n  gl_Position = position;\n  vColor = uColor;\n}\n"}],t.shaderDataLen=t.shaderData.length;var a=0;t.getShaderCode=function(e){for(a=0;a<t.shaderDataLen;a++)if(t.shaderData[a].name===e)return t.shaderData[a].code;return null},window.shaderLoader=t}();
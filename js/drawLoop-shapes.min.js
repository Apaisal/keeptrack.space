var fovBubbleShader;!function(){function r(){let r=`\n    precision mediump float;\n\n    uniform vec3 uLightDirection;\n    varying vec3  vNormal;\n\n    void main () {\n      float directionalLightAmount = max(dot(vNormal, uLightDirection), 0.0);\n      gl_FragColor    = vec4( ${settingsManager.atmosphereColor}, max(directionalLightAmount,0.025));\n    }`;var e=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(e,r),gl.compileShader(e);var t=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(t,"\n      attribute vec3 aVertexPosition;\n      attribute vec3 aVertexNormal;\n\n      uniform mat4 uPMatrix;\n      uniform mat4 uCamMatrix;\n      uniform mat4 uMvMatrix;\n      uniform mat3 uNormalMatrix;\n\n      varying vec3 vNormal;\n\n      void main(void) {\n        gl_Position = uPMatrix * uCamMatrix * uMvMatrix * vec4(aVertexPosition, 1.0);\n        vNormal = normalize( uNormalMatrix * aVertexNormal );\n      }"),gl.compileShader(t),fovBubbleShader=gl.createProgram(),gl.attachShader(fovBubbleShader,t),gl.attachShader(fovBubbleShader,e),gl.linkProgram(fovBubbleShader),this.vertBuf=gl.createBuffer(),this.vertexCount=0,gl.bindBuffer(gl.ARRAY_BUFFER,this.vertBuf),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(72),gl.STREAM_DRAW)}r.prototype.set=function(){getCamPos();var r=[-100,-100,100,100,-100,100,100,100,100,-100,100,100,-100,-100,-100,-100,100,-100,100,100,-100,100,100,-100,-100,100,-100,-100,100,100,100,100,100,100,100,-100,-100,-100,-100,100,-100,-100,100,-100,100,-100,-100,100,100,-100,-100,100,100,-100,100,100,100,100,-100,100,-100,-100,-100,-100,-100,100,-100,100,100,-100,100,-100];this.vertexCount=r.length/3,gl.bindBuffer(gl.ARRAY_BUFFER,this.vertBuf),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(r),gl.STREAM_DRAW)},r.prototype.draw=function(){if(settingsManager.shadersReady&&settingsManager.cruncherReady){var r=orbitManager.getPathShader();gl.useProgram(r),gl.disable(gl.DEPTH_TEST),gl.enable(gl.BLEND),gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA),gl.uniform4fv(r.uColor,[0,1,1,1]),gl.bindBuffer(gl.ARRAY_BUFFER,this.vertBuf),gl.vertexAttribPointer(r.aPos,3,gl.FLOAT,!1,0,0),gl.drawElements(gl.TRIANGLES,this.vertexCount,gl.UNSIGNED_SHORT,0)}},window.FOVBubble=r}(),function(){function r(){this.vertBuf=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,this.vertBuf),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(6),gl.STREAM_DRAW)}r.prototype.set=function(r,e){var t=[];t.push(r[0]),t.push(r[1]),t.push(r[2]),t.push(e[0]),t.push(e[1]),t.push(e[2]),gl.bindBuffer(gl.ARRAY_BUFFER,this.vertBuf),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(t),gl.STREAM_DRAW)},r.prototype.draw=function(r){var e=orbitManager.getPathShader();gl.bindFramebuffer(gl.FRAMEBUFFER,null),gl.useProgram(e),void 0===r&&(r=[1,0,1,1]);try{gl.uniform4fv(e.uColor,r)}catch(r){gl.uniform4fv(e.uColor,[1,0,1,1])}gl.bindBuffer(gl.ARRAY_BUFFER,this.vertBuf),gl.vertexAttribPointer(e.aPos,3,gl.FLOAT,!1,0,0),gl.enableVertexAttribArray(e.aPos),gl.drawArrays(gl.LINES,0,2),gl.disableVertexAttribArray(e.aColor),gl.disable(gl.BLEND),gl.enable(gl.DEPTH_TEST)},window.Line=r}();